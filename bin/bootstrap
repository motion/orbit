#!/bin/bash

. $(dirname $0)/__/common
cd $ROOT

# dont allow errors
set -e

xcode-select --install 2> /dev/null || true
# this on in sync before running brew checks
ensure-dep "brew" -- /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
ensure-dep "npm" -- brew install node &
ensure-dep "realpath" -- brew install coreutils &
ensure-dep "yarn" -- npm i -g yarn &
ensure-dep "python3" -- pyenv install 3.6.6 || brew install python3 &
# ensure-dep "carthage" -- brew install carthage &
wait
ensure-dep "tsc" -- npm i -g typescript &
ensure-dep "pg_config" -- brew install postgresql &
ensure-dep "firebase" -- npm i -g firebase-tools &
wait

# source our helper binaries for ease of use
source $ROOT/.binenv

echo "installing dependencies"
yarn install

# build everything
if [ ! -d "./app/orbit-desktop/_" ]; then
  yarn build
fi

# fix stupid yarn workspaces bug with not seeing nohoist unless you do this
# if [ ! -d "./app/orbit/node_modules" ]; then
#   printf "fixing orbit execa node_module"
#   (cd app/orbit && yarn install)
# fi

sh ./scripts/pg-database.sh

# fixes bug where TS loses permissions every damn clean
chmod ug+x app/orbit/src/index.ts
chmod ug+x app/orbit/_/index.js

# because yarn and npm are weird
function link-orbit() {
  chmod ug+x ./app/orbit/_/index.js
  rm $(yarn global bin)/orbit || true
  rm -r $(yarn global dir)/node_modules/orbit || true
  ln -s $(realpath ./app/orbit/_/index.js) $(yarn global bin)/orbit
  ln -s $(realpath ./app/orbit) $(yarn global dir)/node_modules/orbit
}
link-orbit

printf "\n\n"
printf "  ðŸŽ‰ðŸŽ‰ðŸŽ‰ bootstrapped! ðŸŽ‰ðŸŽ‰ðŸŽ‰"
printf "\n\n"
printf "1) be sure you are running:"
printf "\n\n"
printf "    build --watch"
printf "\n\n"
printf "2) wait a sec, then run:"
printf "\n\n"
printf "    run orbit\n"
printf "\n\n"
