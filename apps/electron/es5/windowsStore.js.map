{"version":3,"sources":["../src/windowsStore.js"],"names":["Constants","WindowStore","opts","setPosition","position","x","setSize","size","hasPathCbs","path","JOT_HOME","key","Math","random","showBar","console","log","cb","push","value","listener","WindowsStore","windows","addWindow","toShowWindow","setPath","find","val","filter","win","removeBy","length"],"mappings":"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","file":"windowsStore.js","sourcesContent":["import { measure } from '~/helpers'\nimport * as Constants from '~/constants'\n\nclass WindowStore {\n  constructor(opts = {}) {\n    this.path = opts.path || Constants.JOT_HOME\n    this.key = opts.key || Math.random()\n    this.position = opts.position || measure().position\n    this.size = opts.size || measure().size\n    this.showBar = true\n  }\n  get active() {\n    return this.path !== Constants.JOT_HOME\n  }\n  setPosition = x => (this.position = x)\n  setSize = x => (this.size = x)\n  toggleBar() {\n    console.log('toggling bar')\n    this.showBar = !this.showBar\n  }\n  hasPathCbs = []\n  onHasPath(cb) {\n    this.hasPathCbs.push(cb)\n  }\n  setPath(value) {\n    this.path = value\n    if (value !== '/') {\n      for (const listener of this.hasPathCbs) {\n        listener()\n      }\n      this.hasPathCbs = []\n    }\n  }\n}\n\nexport default class WindowsStore {\n  windows = []\n  addWindow = () => {\n    this.windows = [new WindowStore({ size: [450, 700] }), ...this.windows]\n  }\n  next(path) {\n    if (!this.windows[0]) {\n      this.addWindow()\n      return\n    }\n    this.addWindow()\n    const toShowWindow = this.windows[1]\n\n    console.log('> next path is', toShowWindow.path)\n    if (toShowWindow) {\n      if (path) {\n        toShowWindow.setPath(path)\n      }\n    }\n\n    console.log('next path:', path, toShowWindow.key)\n    return toShowWindow\n  }\n  findBy(key) {\n    return this.windows.find(x => `${x.key}` === `${key}`)\n  }\n  removeBy(key, val) {\n    this.windows = this.windows.filter(win => win[key] !== val)\n  }\n  removeByPath(path) {\n    this.removeBy('path', path)\n  }\n  removeByKey(key) {\n    console.log('removing by key', key, 'old len', this.windows.length)\n    this.removeBy('key', key)\n    console.log('new len', this.windows.length)\n  }\n}\n"]}