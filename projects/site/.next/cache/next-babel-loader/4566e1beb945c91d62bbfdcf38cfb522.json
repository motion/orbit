{"ast":null,"code":"(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport { useMutationObserver, useResizeObserver, useThrottledFn } from '@o/ui';\nimport { useCallback, useLayoutEffect, useMemo, useRef, useState } from 'react';\nexport function useTextFit(_temp) {\n  var {\n    min = 8,\n    throttle = 32,\n    max = 200,\n    extraScale = 1,\n    updateKey\n  } = _temp === void 0 ? {} : _temp;\n  var ref = useRef(null);\n  var node = ref.current;\n  var parentRef = useRef(null);\n  var [scale, setScale] = useState(1);\n  var height = useMemo(() => node && node.getBoundingClientRect().height || min, [node]);\n  var setScaleBounded = useCallback(x => {\n    var nh = x * height;\n    var nhc = Math.max(min, Math.min(max, nh));\n    var adj = nhc / nh;\n    setScale(x * adj);\n  }, [min, max, height]);\n  var measureFn = useCallback(() => updateScale(scale, ref.current, setScaleBounded), [setScaleBounded, scale, ref.current]);\n  var measure = useThrottledFn(measureFn, {\n    amount: throttle\n  });\n  useResizeObserver({\n    ref: parentRef,\n    onChange: measure\n  }, [parentRef.current]);\n  useResizeObserver({\n    ref,\n    onChange: measure\n  }, [parentRef.current]);\n  useMutationObserver({\n    ref,\n    onChange: measure,\n    options: {\n      attributes: true,\n      subtree: true\n    }\n  }, [ref.current]);\n  useLayoutEffect(() => {\n    if (ref.current) {\n      parentRef.current = ref.current.parentElement;\n      measure();\n    }\n  }, [ref, updateKey]);\n  return {\n    ref,\n    isMeasured: !!ref.current,\n    height: scale * height,\n    style: {\n      transform: \"scale(\" + scale * extraScale + \")\",\n      height: ref.current ? scale * height + \"px\" : 'auto',\n      width: 'max-content',\n      // this make sure it scales \"down\" when the parent container is smaller than text\n      // by ensuring the text containing node is always at least size of the text\n      minWidth: 'min-content'\n    }\n  };\n}\n\n__signature__(useTextFit, \"useRef{ref}\\nuseRef{parentRef}\\nuseState{[scale, setScale](1)}\\nuseMemo{height}\\nuseCallback{setScaleBounded}\\nuseCallback{measureFn}\\nuseThrottledFn{measure}\\nuseResizeObserver{}\\nuseResizeObserver{}\\nuseMutationObserver{}\\nuseLayoutEffect{}\", () => [useThrottledFn, useResizeObserver, useResizeObserver, useMutationObserver]);\n\nvar updateScale = (last, node, update) => {\n  if (!node) return;\n  var parent = node.parentElement;\n  var pWidth = parent.clientWidth;\n  var width = node.clientWidth;\n  var parentScale = pWidth / Math.max(width, 1);\n\n  if (parentScale !== last) {\n    update(parentScale);\n  }\n};\n\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(useTextFit, \"useTextFit\", \"/Users/nw/projects/motion/orbit/projects/site/views/useTextFit.tsx\");\n  reactHotLoader.register(updateScale, \"updateScale\", \"/Users/nw/projects/motion/orbit/projects/site/views/useTextFit.tsx\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/nw/projects/motion/orbit/projects/site/views/useTextFit.tsx"],"names":["useMutationObserver","useResizeObserver","useThrottledFn","useCallback","useLayoutEffect","useMemo","useRef","useState","useTextFit","min","throttle","max","extraScale","updateKey","ref","node","current","parentRef","scale","setScale","height","getBoundingClientRect","setScaleBounded","x","nh","nhc","Math","adj","measureFn","updateScale","measure","amount","onChange","options","attributes","subtree","parentElement","isMeasured","style","transform","width","minWidth","last","update","parent","pWidth","clientWidth","parentScale"],"mappings":"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","sourcesContent":["import { useMutationObserver, useResizeObserver, useThrottledFn } from '@o/ui'\nimport { useCallback, useLayoutEffect, useMemo, useRef, useState } from 'react'\n\nexport type UseTextFitProps = {\n  min?: number\n  max?: number\n  throttle?: number\n  updateKey?: any\n  extraScale?: number\n}\n\nexport function useTextFit({\n  min = 8,\n  throttle = 32,\n  max = 200,\n  extraScale = 1,\n  updateKey,\n}: UseTextFitProps = {}) {\n  const ref = useRef<HTMLElement>(null)\n  const node = ref.current\n  const parentRef = useRef(null)\n  const [scale, setScale] = useState(1)\n  const height = useMemo(() => (node && node.getBoundingClientRect().height) || min, [node])\n  const setScaleBounded = useCallback(\n    x => {\n      const nh = x * height\n      const nhc = Math.max(min, Math.min(max, nh))\n      const adj = nhc / nh\n      setScale(x * adj)\n    },\n    [min, max, height],\n  )\n  const measureFn = useCallback(() => updateScale(scale, ref.current, setScaleBounded), [\n    setScaleBounded,\n    scale,\n    ref.current,\n  ])\n  const measure = useThrottledFn(measureFn, {\n    amount: throttle,\n  })\n\n  useResizeObserver(\n    {\n      ref: parentRef,\n      onChange: measure,\n    },\n    [parentRef.current],\n  )\n\n  useResizeObserver(\n    {\n      ref,\n      onChange: measure,\n    },\n    [parentRef.current],\n  )\n\n  useMutationObserver(\n    {\n      ref,\n      onChange: measure,\n      options: {\n        attributes: true,\n        subtree: true,\n      },\n    },\n    [ref.current],\n  )\n\n  useLayoutEffect(() => {\n    if (ref.current) {\n      parentRef.current = ref.current.parentElement\n      measure()\n    }\n  }, [ref, updateKey])\n\n  return {\n    ref,\n    isMeasured: !!ref.current,\n    height: scale * height,\n    style: {\n      transform: `scale(${scale * extraScale})`,\n      height: ref.current ? `${scale * height}px` : 'auto',\n      width: 'max-content',\n      // this make sure it scales \"down\" when the parent container is smaller than text\n      // by ensuring the text containing node is always at least size of the text\n      minWidth: 'min-content',\n    },\n  }\n}\n\nconst updateScale = (last: number, node: HTMLElement, update: Function) => {\n  if (!node) return\n  const parent = node.parentElement\n  const pWidth = parent.clientWidth\n  const width = node.clientWidth\n  const parentScale = pWidth / Math.max(width, 1)\n  if (parentScale !== last) {\n    update(parentScale)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}