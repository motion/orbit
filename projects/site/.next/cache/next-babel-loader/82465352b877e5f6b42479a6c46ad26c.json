{"ast":null,"code":"(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport { Col } from 'gloss';\nimport { Tree } from '@o/ui';\nimport produce from 'immer';\nimport React, { useState } from 'react';\nexport var Simple = () => {\n  var treeData = {\n    0: {\n      id: 0,\n      name: 'Root Item',\n      expanded: true,\n      children: [1, 2]\n    },\n    1: {\n      id: 1,\n      name: 'test one',\n      expanded: false,\n      children: [3, 4]\n    },\n    2: {\n      id: 2,\n      name: 'lorem ipsum dolor',\n      expanded: false,\n      children: []\n    },\n    3: {\n      id: 3,\n      name: 'sit amet',\n      expanded: false,\n      children: []\n    },\n    4: {\n      id: 4,\n      name: 'test two',\n      expanded: false,\n      children: []\n    }\n  };\n  var [treeState, setTreeState] = useState(treeData);\n  var [selected, setSelected] = useState(0);\n  return React.createElement(Col, {\n    height: 100\n  }, React.createElement(Tree, {\n    root: 0,\n    selected: selected,\n    onTreeItemSelected: id => {\n      setSelected(id);\n    },\n    onTreeItemExpanded: id => {\n      setTreeState(produce(treeState, next => {\n        next[id].expanded = !next[id].expanded;\n      }));\n    },\n    elements: treeState\n  }));\n};\n\n__signature__(Simple, \"useState{[treeState, setTreeState](treeData)}\\nuseState{[selected, setSelected](0)}\");\n\nSimple.displayName = \"Simple\";\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Simple, \"Simple\", \"/Users/nw/projects/motion/orbit/projects/site/pages/DocsPage/DocsTree.tsx\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/nw/projects/motion/orbit/projects/site/pages/DocsPage/DocsTree.tsx"],"names":["Col","Tree","produce","React","useState","Simple","treeData","id","name","expanded","children","treeState","setTreeState","selected","setSelected","next"],"mappings":";;;;;;;;;AAAA,SAASA,GAAT,QAAoB,OAApB;AACA,SAASC,IAAT,QAAqB,OAArB;AACA,OAAOC,OAAP,MAAoB,OAApB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,IAAIC,MAAM,GAAG,MAAM;AACxB,MAAMC,QAAQ,GAAG;AACf,OAAG;AACDC,MAAAA,EAAE,EAAE,CADH;AAEDC,MAAAA,IAAI,EAAE,WAFL;AAGDC,MAAAA,QAAQ,EAAE,IAHT;AAIDC,MAAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ;AAJT,KADY;AAOf,OAAG;AACDH,MAAAA,EAAE,EAAE,CADH;AAEDC,MAAAA,IAAI,EAAE,UAFL;AAGDC,MAAAA,QAAQ,EAAE,KAHT;AAIDC,MAAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ;AAJT,KAPY;AAaf,OAAG;AACDH,MAAAA,EAAE,EAAE,CADH;AAEDC,MAAAA,IAAI,EAAE,mBAFL;AAGDC,MAAAA,QAAQ,EAAE,KAHT;AAIDC,MAAAA,QAAQ,EAAE;AAJT,KAbY;AAmBf,OAAG;AACDH,MAAAA,EAAE,EAAE,CADH;AAEDC,MAAAA,IAAI,EAAE,UAFL;AAGDC,MAAAA,QAAQ,EAAE,KAHT;AAIDC,MAAAA,QAAQ,EAAE;AAJT,KAnBY;AAyBf,OAAG;AACDH,MAAAA,EAAE,EAAE,CADH;AAEDC,MAAAA,IAAI,EAAE,UAFL;AAGDC,MAAAA,QAAQ,EAAE,KAHT;AAIDC,MAAAA,QAAQ,EAAE;AAJT;AAzBY,GAAjB;AAiCA,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAACE,QAAD,CAA1C;AACA,MAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,CAAD,CAAxC;AAEA,SACE,oBAAC,GAAD;AAAK,IAAA,MAAM,EAAE;AAAb,KACE,oBAAC,IAAD;AACE,IAAA,IAAI,EAAE,CADR;AAEE,IAAA,QAAQ,EAAES,QAFZ;AAGE,IAAA,kBAAkB,EAAEN,EAAE,IAAI;AACxBO,MAAAA,WAAW,CAACP,EAAD,CAAX;AACD,KALH;AAME,IAAA,kBAAkB,EAAEA,EAAE,IAAI;AACxBK,MAAAA,YAAY,CACVV,OAAO,CAACS,SAAD,EAAYI,IAAI,IAAI;AACzBA,QAAAA,IAAI,CAACR,EAAD,CAAJ,CAASE,QAAT,GAAoB,CAACM,IAAI,CAACR,EAAD,CAAJ,CAASE,QAA9B;AACD,OAFM,CADG,CAAZ;AAKD,KAZH;AAaE,IAAA,QAAQ,EAAEE;AAbZ,IADF,CADF;AAmBD,CAxDM;;cAAIN,M;;AAAAA,M;;;;;;;;;;0BAAAA,M","sourcesContent":["import { Col } from 'gloss'\nimport { Tree } from '@o/ui'\nimport produce from 'immer'\nimport React, { useState } from 'react'\n\nexport let Simple = () => {\n  const treeData = {\n    0: {\n      id: 0,\n      name: 'Root Item',\n      expanded: true,\n      children: [1, 2],\n    },\n    1: {\n      id: 1,\n      name: 'test one',\n      expanded: false,\n      children: [3, 4],\n    },\n    2: {\n      id: 2,\n      name: 'lorem ipsum dolor',\n      expanded: false,\n      children: [],\n    },\n    3: {\n      id: 3,\n      name: 'sit amet',\n      expanded: false,\n      children: [],\n    },\n    4: {\n      id: 4,\n      name: 'test two',\n      expanded: false,\n      children: [],\n    },\n  }\n\n  const [treeState, setTreeState] = useState(treeData)\n  const [selected, setSelected] = useState(0)\n\n  return (\n    <Col height={100}>\n      <Tree\n        root={0}\n        selected={selected}\n        onTreeItemSelected={id => {\n          setSelected(id)\n        }}\n        onTreeItemExpanded={id => {\n          setTreeState(\n            produce(treeState, next => {\n              next[id].expanded = !next[id].expanded\n            }),\n          )\n        }}\n        elements={treeState}\n      />\n    </Col>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}