#!/bin/bash

# example
# COMMAND ACTION APP
# dev push api

. $(dirname $0)/__common
source-kubes-config

COMMAND=$0
ACTION=$1
APP=$2

APPS=("web" "api" "couch")
KUBES_FILE_OUT="./app_data/kubes.$ENV.yml"
FILE_ARG="-f $KUBES_FILE_OUT"

# actions...
if [ "$ACTION" = "get-config" ]; then
  echo get-config
elif [ "$ACTION" = "status" ]; then
  run kubectl get all
elif [ "$ACTION" = "generate" ]; then
  run kompose -f docker-compose.yml convert -o infra/generated_kubes.yaml
elif [ "$ACTION" = "start" ]; then
  save-config
  run kubectl create ${@:2} $FILE_ARG
elif [ "$ACTION" = "stop" ]; then
  save-config
  run kubectl delete ${@:2} $FILE_ARG
elif [ "$ACTION" = "restart" ]; then
  $0 stop ${@:2}
  $0 start ${@:2}
elif [ "$ACTION" = "apply" ]; then
  save-config
  run kubectl apply ${@:2} $FILE_ARG
elif [ "$ACTION" = "serve" ]; then
  POD=$(kubectl get pods ${@:3} | grep pad-web | head -n 1 | awk '{print $1}')
  kubectl port-forward $POD 80:31000 ${@:3}
elif [ "$ACTION" = "logs" ]; then
  # logs
  POD=$(kubectl get pods ${@:3} | grep $2 | head -n 1 | awk '{print $1}')
  run kubectl logs $POD ${@:3}
elif [ "$ACTION" = "ssh" ]; then
  POD=$(kubectl get pods ${@:3} | grep $2 | head -n 1 | awk '{print $1}')
  run kubectl exec ${@:3} -it  $POD sh
elif [ "$ACTION" = "build" ] || [ "$ACTION" = "push" ]; then
  if [ "$APP" = "all" ]; then
    for app in $APPS; do
      $COMMAND $ACTION $app
    done
  else
    TIME=$(date +%s)
    NAME="motion/starter-$APP"

    if [ "$ACTION" = "build" ]; then
      run docker build \
        --build-arg ENV=$ENV \
        -t $NAME \
        -f infra/images/$APP.dockerfile \
        . ${@:3}

      run docker tag $NAME $NAME:$ENV
      run docker tag $NAME $NAME:$TIME
      run docker tag $NAME $NAME:latest

    elif [ "$ACTION" = "push" ]; then
      run docker push $REGISTRY/$NAME:$ENV
    fi
  fi
else
  run kubectl ${@:1}
fi
