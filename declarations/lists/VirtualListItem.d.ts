import * as React from 'react';
import { GenericComponent } from '../types';
import { ListItemProps } from './ListItem';
export declare type VirtualListItemProps<Item> = ListItemProps & {
    ItemView?: GenericComponent<any>;
    item?: Item;
    query?: string;
    style?: Object;
    width?: number;
    realIndex?: number;
    index: number;
};
declare const _default: React.ComponentClass<React.HTMLAttributes<HTMLDivElement> & import("@mcro/css/_/cssPropertySet").OriginalCSSPropertySetStrict & {
    borderLeftRadius?: number;
    borderRightRadius?: number;
    borderBottomRadius?: number;
    borderTopRadius?: number;
} & import("./ListItem").ListItemHide & import("./ListItem").ListItemDisplayProps & {
    subId?: string | number;
    location?: React.ReactNode;
    preview?: React.ReactNode;
    title?: React.ReactNode;
    subTextOpacity?: number;
    slim?: boolean;
    above?: React.ReactNode;
    activeStyle?: Object;
    before?: React.ReactNode;
    chromeless?: boolean;
    theme?: Partial<import("@mcro/css").ThemeObject>;
    listItem?: boolean;
    subtitle?: React.ReactNode;
    date?: Date;
    icon?: any;
    index?: number;
    isExpanded?: boolean;
    style?: any;
    afterTitle?: React.ReactNode;
    after?: React.ReactNode;
    titleProps?: Object;
    iconBefore?: boolean;
    iconProps?: Object;
    separatorProps?: Object;
    className?: string;
    inGrid?: boolean;
    pane?: string;
    subPane?: string;
    renderText?: (text: string) => JSX.Element;
    children?: React.ReactNode;
    onClick?: Function;
    disableSelect?: boolean;
    onSelect?: (index: number, eventType: "click" | "key", element?: HTMLElement) => any;
    onOpen?: (index: number, eventType: "click" | "key", element?: HTMLElement) => any;
    borderRadius?: number;
    nextUpStyle?: Object;
    isSelected?: boolean | ((index: number) => boolean);
    cardProps?: Object;
    disableShadow?: boolean;
    padding?: number | number[];
    titleFlex?: number;
    subtitleProps?: Object;
    getIndex?: (id: number) => number;
    subtitleSpaceBetween?: React.ReactNode;
    searchTerm?: string;
    onClickLocation?: (index: number, e?: Event) => any;
    separator?: React.ReactNode;
    group?: string;
} & {
    ItemView?: React.ComponentType<any>;
    item?: any;
    query?: string;
    style?: Object;
    width?: number;
    realIndex?: number;
    index: number;
} & import("@mcro/react-sortable-hoc").SortableElementProps, any>;
export default _default;
//# sourceMappingURL=VirtualListItem.d.ts.map