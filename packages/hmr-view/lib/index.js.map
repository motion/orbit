{"version":3,"sources":["../src/index.js"],"names":["proxyReactComponents","componentProxies","__reactComponentProxies","Object","defineProperty","configurable","enumerable","writable","value","reloaded","filename","components","imports","locals","React","module","hot","accept","Error","keys","some","key","isInFunction","err","console","warn","error","forceUpdate","wrapWithProxy","ReactClass","uniqueId","displayName","globalUniqueId","push","instances","update","setTimeout","forEach","get","setInterval","length","log","join"],"mappings":";;;;;;;;kBAkBwBA,oB;;AAlBxB;;AACA;;;;;;AAEA,IAAIC,yBAAJ;AACA,IAAI,iBAAOC,uBAAX,EAAoC;AAClCD,qBAAmB,iBAAOC,uBAA1B;AACD,CAFD,MAEO;AACLD,qBAAmB,EAAnB;AACAE,SAAOC,cAAP,mBAA8B,yBAA9B,EAAyD;AACvDC,kBAAc,IADyC;AAEvDC,gBAAY,KAF2C;AAGvDC,cAAU,KAH6C;AAIvDC,WAAOP;AAJgD,GAAzD;AAMD;;AAED,IAAIQ,WAAW,EAAf;;AAEe,SAAST,oBAAT,OAKZ;AAAA,MAJDU,QAIC,QAJDA,QAIC;AAAA,MAHDC,UAGC,QAHDA,UAGC;AAAA,MAFDC,OAEC,QAFDA,OAEC;AAAA,MADDC,MACC,QADDA,MACC;;AAAA,gCACeD,OADf;AAAA,MACME,KADN;;AAAA,+BAEgBD,MAFhB;AAAA,MAEME,MAFN;;AAAA,gCAGiBF,MAHjB;AAAA,MAGQG,GAHR,eAGQA,GAHR;;AAKD,MAAI,CAACA,GAAD,IAAQ,OAAOA,IAAIC,MAAX,KAAsB,UAAlC,EAA8C;AAC5C,UAAM,IAAIC,KAAJ,CACJ,uEACE,qEADF,GAEE,oEAFF,GAGE,mEAJE,CAAN;AAMD;;AAED;;AAEA,MAAIf,OAAOgB,IAAP,CAAYR,UAAZ,EAAwBS,IAAxB,CAA6B;AAAA,WAAO,CAACT,WAAWU,GAAX,EAAgBC,YAAxB;AAAA,GAA7B,CAAJ,EAAwE;AACtEN,QAAIC,MAAJ,CAAW,eAAO;AAChB,UAAIM,GAAJ,EAAS;AACPC,gBAAQC,IAAR,CACG,qDAAoDf,QAAS,GADhE;AAGAc,gBAAQE,KAAR,CAAcH,GAAd;AACD;AACF,KAPD;AAQD;;AAED,MAAMI,cAAc,gCAAe,iBAAOb,KAAtB,CAApB;AACA,mBAAOa,WAAP,GAAqBA,WAArB;;AAEA,SAAO,SAASC,aAAT,CAAuBC,UAAvB,EAAmCC,QAAnC,EAA6C;AAAA,+BACOnB,WACvDmB,QADuD,CADP;AAAA,qDAC1CR,YAD0C;AAAA,QAC1CA,YAD0C,yCAC3B,KAD2B;AAAA,sDACpBS,WADoB;AAAA,QACpBA,WADoB,0CACND,QADM;;AAKlD;;AACAD,eAAWd,MAAX,GAAoBA,MAApB;;AAEA,QAAIO,YAAJ,EAAkB;AAChB,aAAOO,UAAP;AACD;;AAED,QAAMG,iBAAiBtB,WAAW,GAAX,GAAiBoB,QAAxC;AACA,QAAI7B,iBAAiB+B,cAAjB,CAAJ,EAAsC;AACpCvB,eAASwB,IAAT,CAAcF,WAAd;AACA,UAAMG,YAAYjC,iBAAiB+B,cAAjB,EAAiCG,MAAjC,CAAwCN,UAAxC,CAAlB;AACAO,iBAAW;AAAA,eAAMF,UAAUG,OAAV,CAAkBV,WAAlB,CAAN;AAAA,OAAX;AACD,KAJD,MAIO;AACL1B,uBAAiB+B,cAAjB,IAAmC,6BAAYH,UAAZ,CAAnC;AACD;;AAED,WAAO5B,iBAAiB+B,cAAjB,EAAiCM,GAAjC,EAAP;AACD,GAtBD;AAuBD;;AAEDC,YAAY,YAAM;AAChB,MAAI9B,SAAS+B,MAAb,EAAqB;AACnBhB,YAAQiB,GAAR,CAAa,gBAAehC,SAASiC,IAAT,CAAc,IAAd,CAAoB,EAAhD;AACAjC,eAAW,EAAX;AACD;AACF,CALD,EAKG,IALH","file":"index.js","sourcesContent":["import { getForceUpdate, createProxy } from 'react-proxy'\nimport window from 'global/window'\n\nlet componentProxies\nif (window.__reactComponentProxies) {\n  componentProxies = window.__reactComponentProxies\n} else {\n  componentProxies = {}\n  Object.defineProperty(window, '__reactComponentProxies', {\n    configurable: true,\n    enumerable: false,\n    writable: false,\n    value: componentProxies,\n  })\n}\n\nlet reloaded = []\n\nexport default function proxyReactComponents({\n  filename,\n  components,\n  imports,\n  locals,\n}) {\n  const [React] = imports\n  const [module] = locals\n  const [{ hot }] = locals\n\n  if (!hot || typeof hot.accept !== 'function') {\n    throw new Error(\n      'locals[0] does not appear to be a `module` object with Hot Module ' +\n        'replacement API enabled. You should disable react-transform-hmr in ' +\n        'production by using `env` section in Babel configuration. See the ' +\n        'example in README: https://github.com/gaearon/react-transform-hmr'\n    )\n  }\n\n  // module\n\n  if (Object.keys(components).some(key => !components[key].isInFunction)) {\n    hot.accept(err => {\n      if (err) {\n        console.warn(\n          `[React Transform HMR] There was an error updating ${filename}:`\n        )\n        console.error(err)\n      }\n    })\n  }\n\n  const forceUpdate = getForceUpdate(window.React)\n  window.forceUpdate = forceUpdate\n\n  return function wrapWithProxy(ReactClass, uniqueId) {\n    const { isInFunction = false, displayName = uniqueId } = components[\n      uniqueId\n    ]\n\n    // attach module to class so it can do shit w it\n    ReactClass.module = module\n\n    if (isInFunction) {\n      return ReactClass\n    }\n\n    const globalUniqueId = filename + '$' + uniqueId\n    if (componentProxies[globalUniqueId]) {\n      reloaded.push(displayName)\n      const instances = componentProxies[globalUniqueId].update(ReactClass)\n      setTimeout(() => instances.forEach(forceUpdate))\n    } else {\n      componentProxies[globalUniqueId] = createProxy(ReactClass)\n    }\n\n    return componentProxies[globalUniqueId].get()\n  }\n}\n\nsetInterval(() => {\n  if (reloaded.length) {\n    console.log(`[HMR] views: ${reloaded.join(', ')}`)\n    reloaded = []\n  }\n}, 1000)\n"]}