#!/bin/bash

# break on errors
set -e

APP_OLD_PWD="$(pwd)"
OLD_PATH=$PATH

# cd ROOT
cd $(dirname $0)/..

# source env
source .env

# set path/root
PATH=/usr/local/bin:/usr/bin
ROOT="$(pwd)"

# cd back to original dir
PATH=$OLD_PATH:$ROOT/node_modules/.bin
cd $APP_OLD_PWD

function parse-yaml {
   local prefix=$2
   local s='[[:space:]]*' w='[a-zA-Z0-9_]*' fs=$(echo @|tr @ '\034')
   sed -ne "s|^\($s\):|\1|" \
        -e "s|^\($s\)\($w\)$s:$s[\"']\(.*\)[\"']$s\$|\1$fs\2$fs\3|p" \
        -e "s|^\($s\)\($w\)$s:$s\(.*\)$s\$|\1$fs\2$fs\3|p"  $1 |
   awk -F$fs '{
      indent = length($1)/2;
      vname[indent] = $2;
      for (i in vname) {if (i > indent) {delete vname[i]}}
      if (length($3) > 0) {
         vn=""; for (i=0; i<indent; i++) {vn=(vn)(vname[i])("_")}
         printf("%s%s%s=\"%s\"\n", "'$prefix'",vn, $2, $3);
      }
   }'
}

# source the kubes config
function source-kubes-config {
  parse-yaml ./infra/kubes.$ENV.yml > ./app_data/.env.$ENV
  source ./app_data/.env.$ENV
}

# run with echo
function run {
  echo "$" "$@"
  eval $(printf '%q ' "$@") < /dev/tty
}

# get kubes config
function get-config {
  # get config, requires $ENV
  CONFIG=""
  for app in ./infra/kubes/*; do
    CONFIG+="$(ktmpl $app --parameter-file ./infra/kubes.$ENV.yml)"
    CONFIG+=$'\n'
  done
  # add in extra env configs
  dir="./infra/kubes.$ENV"
  if [ -d $dir ]; then
    for conf in $dir/*; do
      CONFIG+="$(cat $conf)"
      CONFIG+=$'\n'
    done
  fi
  echo "$CONFIG"
}

# save kubes config
function save-config {
  get-config > "$KUBES_FILE_OUT"
}
