{"ast":null,"code":"(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport { createStoreContext } from '@o/use-store';\n\nclass SiteStore {\n  constructor() {\n    this.screenSize = 'large';\n    this.codeCollapsed = false;\n    this.maxHeight = null;\n    this.showSidebar = false;\n    this.windowHeight = window.innerHeight;\n\n    this.toggleSidebar = () => {\n      this.showSidebar = !this.showSidebar;\n    };\n\n    this.toggleCodeCollapsed = () => {\n      this.codeCollapsed = !this.codeCollapsed;\n    };\n\n    this.setMaxHeight = val => {\n      this.maxHeight = val;\n    };\n  }\n\n  get sectionHeight() {\n    var maxHeight = 1200;\n    var desiredHeight = this.windowHeight; // taller on mobile\n\n    if (this.screenSize === 'small') {\n      maxHeight = 950;\n    }\n\n    return Math.max( // min-height\n    900, Math.min(desiredHeight, // max-height\n    maxHeight));\n  }\n\n  // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {\n    // @ts-ignore\n    this[key] = eval(code);\n  }\n\n}\n\nexport var SiteStoreContext = createStoreContext(SiteStore);\nexport var useSiteStore = SiteStoreContext.useStore;\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(SiteStore, \"SiteStore\", \"/Users/nw/projects/motion/orbit/projects/site/SiteStore.ts\");\n  reactHotLoader.register(SiteStoreContext, \"SiteStoreContext\", \"/Users/nw/projects/motion/orbit/projects/site/SiteStore.ts\");\n  reactHotLoader.register(useSiteStore, \"useSiteStore\", \"/Users/nw/projects/motion/orbit/projects/site/SiteStore.ts\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/nw/projects/motion/orbit/projects/site/SiteStore.ts"],"names":["createStoreContext","SiteStore","screenSize","codeCollapsed","maxHeight","showSidebar","windowHeight","window","innerHeight","toggleSidebar","toggleCodeCollapsed","setMaxHeight","val","sectionHeight","desiredHeight","Math","max","min","SiteStoreContext","useSiteStore","useStore"],"mappings":";;;;;;;;;AAAA,SAASA,kBAAT,QAAmC,cAAnC;;AAEA,MAAMC,SAAN,CAAgB;AAAA;AAAA,SACdC,UADc,GACD,OADC;AAAA,SAEdC,aAFc,GAEE,KAFF;AAAA,SAGdC,SAHc,GAGF,IAHE;AAAA,SAIdC,WAJc,GAIA,KAJA;AAAA,SAMdC,YANc,GAMCC,MAAM,CAACC,WANR;;AAAA,SAQdC,aARc,GAQE,MAAM;AACpB,WAAKJ,WAAL,GAAmB,CAAC,KAAKA,WAAzB;AACD,KAVa;;AAAA,SAYdK,mBAZc,GAYQ,MAAM;AAC1B,WAAKP,aAAL,GAAqB,CAAC,KAAKA,aAA3B;AACD,KAda;;AAAA,SAgBdQ,YAhBc,GAgBEC,GAAD,IAAc;AAC3B,WAAKR,SAAL,GAAiBQ,GAAjB;AACD,KAlBa;AAAA;;AAoBd,MAAIC,aAAJ,GAAoB;AAClB,QAAIT,SAAS,GAAG,IAAhB;AACA,QAAIU,aAAa,GAAG,KAAKR,YAAzB,CAFkB,CAGlB;;AACA,QAAI,KAAKJ,UAAL,KAAoB,OAAxB,EAAiC;AAC/BE,MAAAA,SAAS,GAAG,GAAZ;AACD;;AACD,WAAOW,IAAI,CAACC,GAAL,EACL;AACA,OAFK,EAGLD,IAAI,CAACE,GAAL,CACEH,aADF,EAEE;AACAV,IAAAA,SAHF,CAHK,CAAP;AASD;;AApCa;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAuChB,OAAO,IAAMc,gBAAgB,GAAGlB,kBAAkB,CAACC,SAAD,CAA3C;AACP,OAAO,IAAMkB,YAAY,GAAGD,gBAAgB,CAACE,QAAtC;;;;;;;;;;0BAxCDnB,S;0BAuCOiB,gB;0BACAC,Y","sourcesContent":["import { createStoreContext } from '@o/use-store'\n\nclass SiteStore {\n  screenSize = 'large'\n  codeCollapsed = false\n  maxHeight = null\n  showSidebar = false\n\n  windowHeight = window.innerHeight\n\n  toggleSidebar = () => {\n    this.showSidebar = !this.showSidebar\n  }\n\n  toggleCodeCollapsed = () => {\n    this.codeCollapsed = !this.codeCollapsed\n  }\n\n  setMaxHeight = (val: any) => {\n    this.maxHeight = val\n  }\n\n  get sectionHeight() {\n    let maxHeight = 1200\n    let desiredHeight = this.windowHeight\n    // taller on mobile\n    if (this.screenSize === 'small') {\n      maxHeight = 950\n    }\n    return Math.max(\n      // min-height\n      900,\n      Math.min(\n        desiredHeight,\n        // max-height\n        maxHeight,\n      ),\n    )\n  }\n}\n\nexport const SiteStoreContext = createStoreContext(SiteStore)\nexport const useSiteStore = SiteStoreContext.useStore\n"]},"metadata":{},"sourceType":"module"}