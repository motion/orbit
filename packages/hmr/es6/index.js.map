{"version":3,"sources":["../src/index.js"],"names":["t","types","template","matchesDecorator","node","decoratorName","decorators","some","item","expression","type","name","callee","isMemberExpression","object","matchesPatterns","path","patterns","isIdentifier","pattern","matchesPattern","isReactLikeClass","body","isClassMethod","classMember","key","isReactLikeComponentObject","isObjectExpression","properties","isObjectProperty","objectMember","isObjectMethod","isStringLiteral","value","getDisplayName","property","arguments","hasParentFunction","findParent","parentPath","isFunction","wrapComponent","componentId","wrapperFunctionId","callExpression","stringLiteral","toObjectExpression","Object","keys","map","objectProperty","identifier","objectExpression","wrapperFunctionTemplate","VISITED_KEY","Date","now","componentVisitor","Class","componentName","id","scope","generateUid","isInFunction","components","push","isStatement","toExpression","wrapped","constId","variableDeclaration","variableDeclarator","isExportDefaultDeclaration","parent","insertBefore","declaration","replaceWith","CallExpression","get","factoryMethods","ReactTransformBuilder","file","options","program","normalizeOptions","configuredTransformsIds","superClasses","transforms","transform","opts","locals","imports","componentsDeclarationId","generateUidIdentifier","collectAndWrapComponents","length","componentsDeclaration","initComponentsDeclaration","configuredTransforms","initTransformers","wrapperFunction","initWrapperFunction","unshift","reverse","forEach","traverse","currentlyInFunction","uniqueId","props","component","componentProps","booleanLiteral","objectKey","isValidIdentifier","transformName","transformImportId","addImport","transformLocals","local","transformImports","importName","configuredTransformId","configuredTransform","filename","arrayExpression","idParam","componentParam","reduce","memo","transformId","WRAPPER_FUNCTION_ID","ID_PARAM","COMPONENT_PARAM","EXPRESSION","Array","isArray","validateOptions","Error","visitor","Program","assertValidOptions","builder","build"],"mappings":"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","file":"index.js","sourcesContent":["import find from 'lodash/find'\n\nexport default function({ types: t, template }) {\n  function matchesDecorator(node, decoratorName) {\n    return (\n      node.decorators &&\n      node.decorators.some(item => {\n        if (!item.expression) {\n          return false\n        }\n        // @name\n        if (\n          item.expression.type === 'Identifier' &&\n          item.expression.name === decoratorName\n        ) {\n          return true\n        }\n        // @name()\n        if (\n          item.expression.callee &&\n          item.expression.callee.name === decoratorName\n        ) {\n          return true\n        }\n        // @name.something()\n        if (\n          item.expression.callee &&\n          t.isMemberExpression(item.expression.callee) &&\n          item.expression.callee.object.name === decoratorName\n        ) {\n          return true\n        }\n        // @name.something\n        if (\n          item.expression.object &&\n          item.expression.object.name === decoratorName\n        ) {\n          return true\n        }\n        return false\n      })\n    )\n  }\n\n  function matchesPatterns(path, patterns) {\n    return !!find(patterns, pattern => {\n      return (\n        t.isIdentifier(path.node, { name: pattern }) ||\n        path.matchesPattern(pattern)\n      )\n    })\n  }\n\n  function isReactLikeClass(node) {\n    return !!find(node.body.body, classMember => {\n      return (\n        t.isClassMethod(classMember) &&\n        t.isIdentifier(classMember.key, { name: 'render' })\n      )\n    })\n  }\n\n  function isReactLikeComponentObject(node) {\n    return (\n      t.isObjectExpression(node) &&\n      !!find(node.properties, objectMember => {\n        return (\n          (t.isObjectProperty(objectMember) ||\n            t.isObjectMethod(objectMember)) &&\n          (t.isIdentifier(objectMember.key, { name: 'render' }) ||\n            t.isStringLiteral(objectMember.key, { value: 'render' }))\n        )\n      })\n    )\n  }\n\n  // `foo({ displayName: 'NAME' });` => 'NAME'\n  function getDisplayName(node) {\n    const property = find(\n      node.arguments[0].properties,\n      node => node.key.name === 'displayName',\n    )\n    return property && property.value.value\n  }\n\n  function hasParentFunction(path) {\n    return !!path.findParent(parentPath => parentPath.isFunction())\n  }\n\n  // wrapperFunction(\"componentId\")(node)\n  function wrapComponent(node, componentId, wrapperFunctionId) {\n    return t.callExpression(\n      t.callExpression(wrapperFunctionId, [t.stringLiteral(componentId)]),\n      [node],\n    )\n  }\n\n  // `{ name: foo }` => Node { type: \"ObjectExpression\", properties: [...] }\n  function toObjectExpression(object) {\n    const properties = Object.keys(object).map(key => {\n      return t.objectProperty(t.identifier(key), object[key])\n    })\n\n    return t.objectExpression(properties)\n  }\n\n  const wrapperFunctionTemplate = template(`\n    function WRAPPER_FUNCTION_ID(ID_PARAM) {\n      return function(COMPONENT_PARAM) {\n        return EXPRESSION;\n      };\n    }\n  `)\n\n  const VISITED_KEY = 'react-transform-' + Date.now()\n\n  const componentVisitor = {\n    Class(path) {\n      if (\n        path.node[VISITED_KEY] ||\n        !matchesDecorator(path.node, this.decoratorName) ||\n        !isReactLikeClass(path.node)\n      ) {\n        return\n      }\n\n      path.node[VISITED_KEY] = true\n\n      const componentName = (path.node.id && path.node.id.name) || null\n      const componentId = componentName || path.scope.generateUid('component')\n      const isInFunction = hasParentFunction(path)\n\n      this.components.push({\n        id: componentId,\n        name: componentName,\n        isInFunction: isInFunction,\n      })\n\n      // Can't wrap ClassDeclarations\n      const isStatement = t.isStatement(path.node)\n      const expression = t.toExpression(path.node)\n\n      // wrapperFunction(\"componentId\")(node)\n      let wrapped = wrapComponent(\n        expression,\n        componentId,\n        this.wrapperFunctionId,\n      )\n      let constId\n\n      if (isStatement) {\n        // wrapperFunction(\"componentId\")(class Foo ...) => const Foo = wrapperFunction(\"componentId\")(class Foo ...)\n        constId = t.identifier(componentName || componentId)\n        wrapped = t.variableDeclaration('const', [\n          t.variableDeclarator(constId, wrapped),\n        ])\n      }\n\n      if (t.isExportDefaultDeclaration(path.parent)) {\n        path.parentPath.insertBefore(wrapped)\n        path.parent.declaration = constId\n      } else {\n        path.replaceWith(wrapped)\n      }\n    },\n\n    CallExpression(path) {\n      if (\n        path.node[VISITED_KEY] ||\n        !matchesPatterns(path.get('callee'), this.factoryMethods) ||\n        !isReactLikeComponentObject(path.node.arguments[0])\n      ) {\n        return\n      }\n\n      path.node[VISITED_KEY] = true\n\n      // `foo({ displayName: 'NAME' });` => 'NAME'\n      const componentName = getDisplayName(path.node)\n      const componentId = componentName || path.scope.generateUid('component')\n      const isInFunction = hasParentFunction(path)\n\n      this.components.push({\n        id: componentId,\n        name: componentName,\n        isInFunction: isInFunction,\n      })\n\n      path.replaceWith(\n        wrapComponent(path.node, componentId, this.wrapperFunctionId),\n      )\n    },\n  }\n\n  class ReactTransformBuilder {\n    constructor(file, options) {\n      this.file = file\n      this.program = file.path\n      this.options = this.normalizeOptions(options)\n      this.configuredTransformsIds = []\n    }\n\n    static validateOptions(options) {\n      return Array.isArray(options.transforms)\n    }\n\n    static assertValidOptions(options) {\n      if (!ReactTransformBuilder.validateOptions(options)) {\n        throw new Error(\n          'babel-plugin-react-transform requires that you specify options ' +\n            'in .babelrc or from the Babel Node API, and that it is an object ' +\n            'with a transforms property which is an array.',\n        )\n      }\n    }\n\n    normalizeOptions(options) {\n      return {\n        factoryMethods: options.factoryMethods || ['React.createClass'],\n        superClasses: options.superClasses || ['React.Component', 'Component'],\n        decoratorName: options.decoratorName || 'view',\n        transforms: options.transforms.map(opts => {\n          return {\n            transform: opts.transform,\n            locals: opts.locals || [],\n            imports: opts.imports || [],\n          }\n        }),\n      }\n    }\n\n    build() {\n      const componentsDeclarationId = this.file.scope.generateUidIdentifier(\n        'components',\n      )\n      const wrapperFunctionId = this.file.scope.generateUidIdentifier(\n        'wrapComponent',\n      )\n\n      const components = this.collectAndWrapComponents(wrapperFunctionId)\n\n      if (!components.length) {\n        return\n      }\n\n      const componentsDeclaration = this.initComponentsDeclaration(\n        componentsDeclarationId,\n        components,\n      )\n      const configuredTransforms = this.initTransformers(\n        componentsDeclarationId,\n      )\n      const wrapperFunction = this.initWrapperFunction(wrapperFunctionId)\n\n      const body = this.program.node.body\n\n      body.unshift(wrapperFunction)\n      configuredTransforms.reverse().forEach(node => body.unshift(node))\n      body.unshift(componentsDeclaration)\n    }\n\n    /**\n     * const Foo = _wrapComponent('Foo')(class Foo extends React.Component {});\n     * ...\n     * const Bar = _wrapComponent('Bar')(React.createClass({\n     *   displayName: 'Bar'\n     * }));\n     */\n    collectAndWrapComponents(wrapperFunctionId) {\n      const components = []\n\n      this.file.path.traverse(componentVisitor, {\n        wrapperFunctionId: wrapperFunctionId,\n        components: components,\n        factoryMethods: this.options.factoryMethods,\n        superClasses: this.options.superClasses,\n        decoratorName: this.options.decoratorName,\n        currentlyInFunction: false,\n      })\n\n      return components\n    }\n\n    /**\n     * const _components = {\n     *   Foo: {\n     *     displayName: \"Foo\"\n     *   }\n     * };\n     */\n    initComponentsDeclaration(componentsDeclarationId, components) {\n      let uniqueId = 0\n\n      const props = components.map(component => {\n        const componentId = component.id\n        const componentProps = []\n\n        if (component.name) {\n          componentProps.push(\n            t.objectProperty(\n              t.identifier('displayName'),\n              t.stringLiteral(component.name),\n            ),\n          )\n        }\n\n        if (component.isInFunction) {\n          componentProps.push(\n            t.objectProperty(\n              t.identifier('isInFunction'),\n              t.booleanLiteral(true),\n            ),\n          )\n        }\n\n        let objectKey\n\n        if (t.isValidIdentifier(componentId)) {\n          objectKey = t.identifier(componentId)\n        } else {\n          objectKey = t.stringLiteral(componentId)\n        }\n\n        return t.objectProperty(objectKey, t.objectExpression(componentProps))\n      })\n\n      return t.variableDeclaration('const', [\n        t.variableDeclarator(\n          componentsDeclarationId,\n          t.objectExpression(props),\n        ),\n      ])\n    }\n\n    /**\n     * import _transformLib from \"transform-lib\";\n     * ...\n     * const _transformLib2 = _transformLib({\n     *   filename: \"filename\",\n     *   components: _components,\n     *   locals: [],\n     *   imports: []\n     * });\n     */\n    initTransformers(componentsDeclarationId) {\n      return this.options.transforms.map(transform => {\n        const transformName = transform.transform\n        const transformImportId = this.file.addImport(\n          transformName,\n          'default',\n          transformName,\n        )\n\n        const transformLocals = transform.locals.map(local => {\n          return t.identifier(local)\n        })\n\n        const transformImports = transform.imports.map(importName => {\n          return this.file.addImport(importName, 'default', importName)\n        })\n\n        const configuredTransformId = this.file.scope.generateUidIdentifier(\n          transformName,\n        )\n        const configuredTransform = t.variableDeclaration('const', [\n          t.variableDeclarator(\n            configuredTransformId,\n            t.callExpression(transformImportId, [\n              toObjectExpression({\n                filename: t.stringLiteral(this.file.opts.filename),\n                components: componentsDeclarationId,\n                locals: t.arrayExpression(transformLocals),\n                imports: t.arrayExpression(transformImports),\n              }),\n            ]),\n          ),\n        ])\n\n        this.configuredTransformsIds.push(configuredTransformId)\n\n        return configuredTransform\n      })\n    }\n\n    /**\n     * function _wrapComponent(id) {\n     *   return function (Component) {\n     *     return _transformLib2(Component, id);\n     *   };\n     * }\n     */\n    initWrapperFunction(wrapperFunctionId) {\n      const idParam = t.identifier('id')\n      const componentParam = t.identifier('Component')\n\n      const expression = this.configuredTransformsIds\n        .reverse()\n        .reduce((memo, transformId) => {\n          return t.callExpression(transformId, [memo, idParam])\n        }, componentParam)\n\n      return wrapperFunctionTemplate({\n        WRAPPER_FUNCTION_ID: wrapperFunctionId,\n        ID_PARAM: idParam,\n        COMPONENT_PARAM: componentParam,\n        EXPRESSION: expression,\n      })\n    }\n  }\n\n  return {\n    visitor: {\n      Program(path, { file, opts }) {\n        const options = opts || {}\n        ReactTransformBuilder.assertValidOptions(options)\n        const builder = new ReactTransformBuilder(file, options)\n        builder.build()\n      },\n    },\n  }\n}\n"]}