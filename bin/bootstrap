#!/bin/bash

. $(dirname $0)/__/common
cd $ROOT
# allow errors
set +e

file-exists ".env"
source .env

function link-root-modules() {
  npx lerna exec -- yarn link
  yarn link @mcro/gloss &
  yarn link @mcro/css &
  yarn link @mcro/babel-plugin-if &
  yarn link @mcro/babel-preset-motion &
  wait
}

function copy-bootstrap-hook() {
  rm ./.git/hooks/post-merge
  cp ./bin/post-merge ./.git/hooks
}

function build-builder-modules() {
  (cd packages/gloss && npm run build) &
  (cd packages/css && npm run build) &
  (cd packages/gloss-displaynames && npm run build) &
  wait
}

xcode-select --install 2> /dev/null
# this on in sync before running brew checks
ensure-dep "brew" -- /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
ensure-dep "npm" -- brew install node &
ensure-dep "realpath" -- brew install coreutils &
ensure-dep "yarn" -- npm i -g yarn &
ensure-dep "python3" -- brew install python3 &
ensure-dep "carthage" -- brew install carthage &
wait
ensure-dep "pyenv" -- ./apps/oracle/build.sh
echo "installing root"
yarn install
echo "installing packages"
npx lerna bootstrap --loglevel=warn
# internal tools
ensure-file ./packages/gloss/_/gloss.js -- build-builder-modules
ensure-file ./packages/css/_/css.js -- build-builder-modules
ensure-file ./packages/gloss-displaynames/_/index.js -- build-builder-modules
# link second
ensure-symlink ./node_modules/@mcro/gloss -- link-root-modules
copy-bootstrap-hook
# build everything once
ensure-dir ./apps/desktop/_ -- build
echo "bootstrapped!"
echo "run desktop; run app; run electron"
