#!/bin/bash

# example
# COMMAND ACTION APP
# dev push api

COMMAND=$0
ACTION=$1
APP=$2

if [ "$ACTION" = "ui" ]; then
  minikube dashboard
elif [ "$ACTION" = "generate" ]; then
  kompose -f docker-compose.yml convert -o infra/generated_kubes.yaml
elif [ "$ACTION" = "bootstrap" ]; then
  kubectl create secret docker-registry $DOCKER_SECRET \
    --docker-server=$DOCKER_REGISTRY_SERVER \
    --docker-username=$DOCKER_USER \
    --docker-password=$DOCKER_PASSWORD \
    --docker-email=$DOCKER_EMAIL
elif [ "$ACTION" = "start" ]; then
  kubectl create -f infra/kubes
elif [ "$ACTION" = "stop" ]; then
  kubectl delete -f infra/kubes
elif [ "$ACTION" = "restart" ]; then
  $0 stop
  $0 start
elif [ "$ACTION" = "apply" ]; then
  kubectl apply -f infra/kubes
elif [ "$ACTION" = "logs" ]; then
  # logs
  POD=$(kubectl get pods | grep $2 | awk '{print $1}')
  echo "logs for $POD"
  kubectl logs $POD
elif [ "$ACTION" = "ssh" ]; then
  POD=$(kubectl get pods | grep $2 | awk '{print $1}')
  echo "kubectl exec -it $POD sh"
  kubectl exec -it  $POD sh
elif [ "$ACTION" = "build" ] || [ "$ACTION" = "push" ]; then
  if [ "$APP" = "all" ]; then
    # todo automate based on images dir
    $COMMAND $ACTION public
    $COMMAND $ACTION api
    $COMMAND $ACTION couch
  else
    TIME=$(date +%s)
    NAME="motion/starter-$APP"

    if [ "$ACTION" = "build" ]; then
      echo "docker build --build-arg ENV=prod -t motion/starter-$APP -f infra/images/$APP.dockerfile . ${@:3}"
      docker build \
        --build-arg ENV=prod \
        -t $NAME \
        -f infra/images/$APP.dockerfile \
        . ${@:3}

      docker tag $NAME:$TIME $NAME:latest
    elif [ "$ACTION" = "push" ]; then
      docker push $NAME
    fi
  fi
else
  kubectl ${@:1}
fi
