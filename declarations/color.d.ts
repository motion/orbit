export * from './helpers';
export declare class Color {
    static rgb: Function;
    model: string;
    color: number[];
    valpha: number;
    rgb: Function;
    hsl: Function;
    hwb: Function;
    constructor(obj: any, model?: any);
    readonly _equalityKey: any;
    toString(): any;
    string(places?: any): any;
    percentString(places: any): string;
    array(): number[];
    object(): {};
    unitArray(): any;
    unitObject(): any;
    round(places: any): Color;
    alpha(rawVal?: any): number | Color;
    keyword(val?: any): any;
    hex(val?: any): string | Color;
    rgbNumber(): number;
    luminosity(): number;
    contrast(color2: any): number;
    level(color2: any): "" | "AAA" | "AA";
    isDark(): boolean;
    isLight(): boolean;
    negate(): any;
    lighten(ratio: any): any;
    darken(ratio: any): any;
    saturate(ratio: any): any;
    desaturate(ratio: any): any;
    whiten(ratio: any): any;
    blacken(ratio: any): any;
    grayscale(): any;
    fade(ratio: any): number | Color;
    opaquer(ratio: any): number | Color;
    rotate(degrees: any): any;
    mix(mixinColor: any, weight?: number): any;
    readonly red: (val?: any) => any;
    readonly green: (val?: any) => any;
    readonly blue: (val?: any) => any;
    readonly hue: (val?: any) => any;
    readonly saturationl: (val?: any) => any;
    readonly lightness: (val?: any) => any;
    readonly saturationv: (val?: any) => any;
    readonly value: (val?: any) => any;
    readonly white: (val?: any) => any;
    readonly wblack: (val?: any) => any;
}
export declare function color(obj: any, model?: any): Color;
//# sourceMappingURL=color.d.ts.map