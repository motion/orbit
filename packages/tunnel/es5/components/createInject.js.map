{"version":3,"sources":["../../src/components/createInject.js"],"names":["createInject","defaultMapProvidedToProps","provided","getDisplayName","Component","displayName","name","React","nextVersion","inject","mapProvidedToProps","finalMapProvidedToProps","version","computeProvidedProps","providedProps","wrapWithInject","WrappedComponent","Inject","nextProps","nextState","nextContext","state","props","context","constructor","recomputeProvidedProps","nextProvidedProps","setState","refs","wrappedInstance","contextTypes","process","env","NODE_ENV","__DEV__","prototype","componentWillUpdate"],"mappings":"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","file":"createInject.js","sourcesContent":["import invariant from 'invariant';\nimport shallowEqual from '../utils/shallowEqual';\nimport isPlainObject from '../utils/isPlainObject';\nimport { object } from 'prop-types';\n\nconst defaultMapProvidedToProps = (provided) => ({...provided});\n\nfunction getDisplayName(Component) {\n  return Component.displayName || Component.name || 'Component';\n}\n\nexport default function createInject(React) {\n  const { Component } = React;\n\n  //@TODO have not tested nextVersion stuff\n  var nextVersion = 0;\n  return function inject(mapProvidedToProps) {\n    const finalMapProvidedToProps = mapProvidedToProps || defaultMapProvidedToProps;\n\n    // Helps track hot reloading.\n    const version = nextVersion++;\n\n    function computeProvidedProps(provided) {\n      const providedProps = finalMapProvidedToProps(provided);\n      invariant(\n        isPlainObject(providedProps),\n        '`mapProvidedToProps` must return an object. Instead received %s.',\n        providedProps\n      );\n      return providedProps;\n    }\n\n    return function wrapWithInject(WrappedComponent) {\n      class Inject extends Component {\n        static displayName = `inject(${getDisplayName(WrappedComponent)})`;\n        static WrappedComponent = WrappedComponent;\n\n        static contextTypes = {\n          provided: object\n        };\n\n        shouldComponentUpdate(nextProps, nextState, nextContext) {\n          return !shallowEqual(this.state.provided, nextState.provided) ||\n                  !shallowEqual(this.props, nextProps);\n        }\n\n        constructor(props, context) {\n          super(props, context);\n          this.version = version;\n          this.provided = context.provided;\n\n          invariant(this.provided,\n            `Could not find \"provided\" in context ` +\n            `of \"${this.constructor.displayName}\". ` +\n            `Wrap a higher component in a <Provider>. `\n          );\n\n          this.state = {\n            provided: computeProvidedProps(this.provided)\n          };\n        }\n\n        componentWillReceiveProps(nextProps, nextContext) {\n          if (!shallowEqual(this.provided, nextContext.provided)) {\n            this.provided = nextContext.provided;\n            this.recomputeProvidedProps(nextContext);\n          }\n        }\n\n        recomputeProvidedProps(context = this.context) {\n          const nextProvidedProps = computeProvidedProps(context.provided);\n          if (!shallowEqual(nextProvidedProps, this.state.provided)) {\n            this.setState({provided: nextProvidedProps});\n          }\n        }\n\n        getWrappedInstance() {\n          return this.refs.wrappedInstance;\n        }\n\n        render() {\n          return (\n            <WrappedComponent ref='wrappedInstance'\n                              {...this.state.provided} {...this.props} />\n          );\n        }\n      }\n\n      if ((\n        // Node-like CommonJS environments (Browserify, Webpack)\n        typeof process !== 'undefined' &&\n        typeof process.env !== 'undefined' &&\n        process.env.NODE_ENV !== 'production'\n       ) ||\n        // React Native\n        typeof __DEV__ !== 'undefined' &&\n        __DEV__ //eslint-disable-line no-undef\n      ) {\n        Inject.prototype.componentWillUpdate = function componentWillUpdate() {\n          if (this.version === version) {\n            return;\n          }\n\n          // We are hot reloading!\n          this.version = version;\n\n          // Update the state and bindings.\n          this.recomputeProvidedProps();\n        };\n      }\n\n      return Inject;\n    };\n  };\n}\n"]}