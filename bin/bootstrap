#!/bin/bash

. $(dirname $0)/__/common
cd $ROOT

# allow errors
set +e

file-exists ".env"
file-exists ".env.dev"

xcode-select --install 2> /dev/null
ensure-dep "brew" -- /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
ensure-dep "npm" -- brew install node &
ensure-dep "pnpm" -- npm i -g pnpm &

wait

# echo "pnpm install"
pnpm install
# echo "pnpm recursive install"
pnpm recursive install

function link-root-modules() {
  pnpm recursive link
  pnpm link @mcro/gloss &
  pnpm link @mcro/css &
  pnpm link @mcro/hmr &
  pnpm link @mcro/hmr-view &
  pnpm link @mcro/babel-preset-motion &
  wait
}

function copy-bootstrap-hook() {
  rm ./.git/hooks/post-merge
  cp ./bin/post-merge ./.git/hooks
}

function build-builder-modules() {
  (cd packages/gloss && npm run prebuild) &
  (cd packages/css && npm run prebuild) &
  (cd packages/hmr && npm run prebuild) &
  (cd packages/hmr-view && npm run prebuild) &
  wait
}

# internal tools
# build first
ensure-file ./packages/hmr/es6/index.js -- build-builder-modules
ensure-file ./packages/hmr-view/es6/index.js -- build-builder-modules
ensure-file ./packages/gloss/es6/index.js -- build-builder-modules
ensure-file ./packages/css/es6/index.js -- build-builder-modules
# link second
ensure-symlink ./node_modules/@mcro/gloss -- link-root-modules
copy-bootstrap-hook

echo ""
echo "done! run build --watch before developing"
