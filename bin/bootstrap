#!/bin/bash

. $(dirname $0)/__/common
cd $ROOT
# allow errors
set +e

function restart-vscode() {
  out=`code --install-extension yukidoi.blade-runner | grep already | wc -l`
  if [[ "$out" -eq 0 ]]; then
    pkill Electron
    sleep 0.5
    code
  fi
}

function link-root-modules() {
  lerna exec -- yarn link
  yarn link @mcro/gloss &
  yarn link @mcro/css &
  yarn link @mcro/hmr &
  yarn link @mcro/hmr-view &
  yarn link @mcro/babel-preset-motion &
  wait
}

function copy-bootstrap-hook() {
  rm ./.git/hooks/post-merge
  cp ./bin/post-merge ./.git/hooks
}

function build-builder-modules() {
  (cd packages/gloss && npm run prebuild) &
  (cd packages/css && npm run prebuild) &
  (cd packages/hmr && npm run prebuild) &
  (cd packages/hmr-view && npm run prebuild) &
  wait
}

file-exists ".env"
file-exists ".env.dev"
xcode-select --install 2> /dev/null
ensure-dep "brew" -- /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
ensure-dep "npm" -- brew install node &
ensure-dep "yarn" -- npm i -g yarn &
ensure-dep "realpath" -- brew install coreutils &
wait
yarn install --silent
npx lerna bootstrap --loglevel=warn
# internal tools
ensure-file ./packages/hmr/es6/index.js -- build-builder-modules
ensure-file ./packages/hmr-view/es6/index.js -- build-builder-modules
ensure-file ./packages/gloss/es6/index.js -- build-builder-modules
ensure-file ./packages/css/es6/index.js -- build-builder-modules
# link second
ensure-symlink ./node_modules/@mcro/gloss -- link-root-modules
copy-bootstrap-hook
echo "bootstrapped!"
echo "run desktop; run app; run electron"
