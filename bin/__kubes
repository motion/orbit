#!/bin/bash

# example
# COMMAND ACTION APP
# dev push api

. $(dirname $0)/__common

COMMAND=$0
ACTION=$1
APP=$2

APPS=("web" "api" "couch" "redis")
KUBES_CONFIG_OUT="./app_data/kubes.$ENV"
KUBES_CONFIG_FILE="$KUBES_CONFIG_OUT/all.yml"

function kubes-config-file {
  arg="-f $KUBES_CONFIG_OUT/$APP.yml"
  if [ -z "$APP" ]; then
    arg="-f $KUBES_CONFIG_OUT/all.yml"
  fi
  echo "$arg"
}

FILE_ARG=$(kubes-config-file)

export DOCKER_OPTS="--insecure-registry ${REGISTRY}"

function get-pod() {
  kubectl get pods ${@:2} | grep "$1" | head -n 1 | awk '{print $1}'
}

# actions...
if [ "$ACTION" = "get-pod" ]; then
  get-pod ${@:2}
elif [ "$ACTION" = "get-config" ]; then
  save-config
  echo $KUBES_CONFIG_OUT
  echo "$(ls -la $KUBES_CONFIG_OUT)"
elif [ "$ACTION" = "status" ]; then
  run kubectl get all
elif [ "$ACTION" = "generate" ]; then
  run kompose -f docker-compose.yml convert -o infra/generated_kubes.yaml
elif [ "$ACTION" = "start" ]; then
  save-config

  set +e
  if kubectl get secret docker-hub 2>/dev/null; then
    set -e
  else
    kubectl create secret docker-registry $DOCKER_SECRET \
      --docker-server=$DOCKER_REGISTRY_SERVER \
      --docker-username=$DOCKER_USER \
      --docker-password=$DOCKER_PASSWORD \
      --docker-email=$DOCKER_EMAIL
  fi
  set -e

  run kubectl create ${@:3} $FILE_ARG
elif [ "$ACTION" = "stop" ]; then
  save-config
  run kubectl delete ${@:3} $FILE_ARG
elif [ "$ACTION" = "restart" ]; then
  $0 stop ${@:2}
  $0 start ${@:2}
elif [ "$ACTION" = "apply" ]; then
  save-config
  run kubectl apply ${@:3} $FILE_ARG
elif [ "$ACTION" = "serve" ]; then
  run sudo kubectl port-forward $(get-pod web) 80:80 ${@:3}
elif [ "$ACTION" = "serve-registry" ]; then
  ns="--namespace kube-system"
  run kubectl port-forward $ns $(get-pod kube-registry-v0 $ns) 5000:5000 ${@:3}
elif [ "$ACTION" = "logs" ]; then
  run kubectl logs $(get-pod $APP) ${@:3}
elif [ "$ACTION" = "exec" ]; then
  run kubectl exec -it  $(get-pod $APP) ${@:3}
elif [ "$ACTION" = "attach" ]; then
  run kubectl attach $(get-pod $APP) ${@:3}
elif [ "$ACTION" = "ssh" ]; then
  run kubectl exec -it  $(get-pod $APP) sh ${@:3}
elif [ "$ACTION" = "build" ] || [ "$ACTION" = "push" ]; then
  save-config
  if [ "$APP" = "all" ]; then
    for app in $APPS; do
      $COMMAND $ACTION $app ${@:3}
    done
  else
    TIME=$(date +%s)
    NAME="motion/starter-$APP"

    if [ "$ACTION" = "build" ]; then
      run docker build \
        --build-arg ENV=$ENV \
        -t $NAME \
        -f infra/images/$APP.dockerfile \
        . ${@:3}

      run docker tag $NAME $NAME:$ENV
      run docker tag $NAME $NAME:$TIME

      if [ "$ENV" = "prod" ]; then
        run docker tag $NAME $NAME:latest
      fi

    elif [ "$ACTION" = "push" ]; then
      run docker push $REGISTRY/$NAME:$ENV
    fi
  fi
else
  run kubectl ${@:1}
fi
