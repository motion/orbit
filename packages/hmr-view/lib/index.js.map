{"version":3,"sources":["../src/index.js"],"names":["proxyReactComponents","viewProxies","reloaded","createProxy","Klass","mountedInstances","WeakMap","Current","update","Thing","name","Object","keys","forEach","key","thingProto","prototype","Proxy","get","target","console","log","bind","map","k","instances","filename","components","imports","locals","React","module","hot","accept","Error","forceUpdater","wrapWithProxy","ReactClass","uniqueId","isInFunction","displayName","uid","push","setTimeout","instance","handleHotReload","setInterval","length","join"],"mappings":"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","file":"index.js","sourcesContent":["import window from 'global/window'\nimport { getForceUpdate } from 'react-proxy'\n\nconst viewProxies = {}\nwindow.viewProxies = viewProxies\n\nlet reloaded = []\n\nfunction createProxy(Klass) {\n  const mountedInstances = new WeakMap()\n  let Current\n\n  update(Klass)\n\n  function update(Thing) {\n    // wrap\n    Current = class X {\n      static get name() {\n        return Thing.name\n      }\n    }\n\n    Object.keys(Thing).forEach(key => {\n      Current[key] = Thing[key]\n    })\n\n    const thingProto = Thing.prototype\n    Current.prototype = new Proxy(thingProto, {\n      get(target, name) {\n        console.log('gets', name)\n        if (name === 'componentDidMount') {\n          log('wrapping mount')\n          mountedInstances[target] = target\n        }\n        if (name === 'componentWillUnmount') {\n          delete mountedInstances[target]\n        }\n        return typeof target[name] === 'function'\n          ? target[name].bind(target)\n          : target[name]\n      },\n    })\n\n    // update\n    return Object.keys(mountedInstances).map(k => {\n      mountedInstances[k] = Current\n      return mountedInstances[k]\n    })\n  }\n\n  return {\n    update,\n    get: () => Current,\n    instances: () => mountedInstances,\n  }\n}\n\nexport default function proxyReactComponents({\n  filename,\n  components,\n  imports,\n  locals,\n}) {\n  const [React] = imports\n  const [module] = locals\n  const [{ hot }] = locals\n\n  if (!hot || typeof hot.accept !== 'function') {\n    throw new Error(\n      'locals[0] does not appear to be a `module` object with Hot Module ' +\n        'replacement API enabled. You should disable react-transform-hmr in ' +\n        'production by using `env` section in Babel configuration. See the ' +\n        'example in README: https://github.com/gaearon/react-transform-hmr'\n    )\n  }\n\n  const forceUpdater = getForceUpdate(React || window.React)\n\n  return function wrapWithProxy(ReactClass, uniqueId) {\n    const { isInFunction = false, displayName = uniqueId } = components[\n      uniqueId\n    ]\n    const uid = filename + '$' + uniqueId\n    log('HMR', uid)\n\n    if (isInFunction) {\n      return ReactClass\n    }\n\n    module.hot.accept(() => {\n      console.log('just accepting', uid)\n    })\n\n    // if existing proxy\n    if (viewProxies[uid]) {\n      reloaded.push(displayName)\n      const instances = viewProxies[uid].update(ReactClass)\n      setTimeout(() =>\n        instances.forEach(instance => {\n          log('HANDLE HMR', instance)\n          if (instance.handleHotReload) {\n            instance.handleHotReload(module, forceUpdater(instance))\n          }\n        })\n      )\n    } else {\n      viewProxies[uid] = createProxy(ReactClass)\n    }\n\n    return viewProxies[uid].get()\n  }\n}\n\nsetInterval(() => {\n  if (reloaded.length) {\n    console.log(`[HMR] views: ${reloaded.join(', ')}`)\n    reloaded = []\n  }\n}, 1000)\n"]}