{"version":3,"sources":["../src/bindAutoBindMethods.js"],"names":["bindAutoBindMethods","bindAutoBindMethod","component","method","boundMethod","bind","__reactBoundContext","__reactBoundMethod","__reactBoundArguments","componentName","constructor","displayName","_bind","newThis","args","Array","prototype","slice","call","arguments","console","warn","length","reboundMethod","apply","bindAutoBindMethodsFromMap","autoBindKey","__reactAutoBindMap","hasOwnProperty","__reactAutoBindPairs","bindAutoBindMethodsFromArray","pairs","i"],"mappings":";;;;;kBAwEwBA,mB;AAxExB;;;;;;;;;;;;AAYA,SAASC,kBAAT,CAA4BC,SAA5B,EAAuCC,MAAvC,EAA+C;AAC7C,MAAIC,cAAcD,OAAOE,IAAP,CAAYH,SAAZ,CAAlB;;AAEAE,cAAYE,mBAAZ,GAAkCJ,SAAlC;AACAE,cAAYG,kBAAZ,GAAiCJ,MAAjC;AACAC,cAAYI,qBAAZ,GAAoC,IAApC;;AAEA,MAAIC,gBAAgBP,UAAUQ,WAAV,CAAsBC,WAA1C;AAAA,MACEC,QAAQR,YAAYC,IADtB;;AAGAD,cAAYC,IAAZ,GAAmB,UAASQ,OAAT,EAAkB;AACnC,QAAIC,OAAOC,MAAMC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,EAAsC,CAAtC,CAAX;AACA,QAAIN,YAAYX,SAAZ,IAAyBW,YAAY,IAAzC,EAA+C;AAC7CO,cAAQC,IAAR,CACE,8DACE,0BADF,GAEEZ,aAHJ;AAKD,KAND,MAMO,IAAI,CAACK,KAAKQ,MAAV,EAAkB;AACvBF,cAAQC,IAAR,CACE,kEACE,8DADF,GAEE,+CAFF,GAGEZ,aAJJ;AAMA,aAAOL,WAAP;AACD;;AAED,QAAImB,gBAAgBX,MAAMY,KAAN,CAAYpB,WAAZ,EAAyBe,SAAzB,CAApB;AACAI,kBAAcjB,mBAAd,GAAoCJ,SAApC;AACAqB,kBAAchB,kBAAd,GAAmCJ,MAAnC;AACAoB,kBAAcf,qBAAd,GAAsCM,IAAtC;;AAEA,WAAOS,aAAP;AACD,GAxBD;;AA0BA,SAAOnB,WAAP;AACD;;AAED,SAASqB,0BAAT,CAAoCvB,SAApC,EAA+C;AAC7C,OAAK,IAAIwB,WAAT,IAAwBxB,UAAUyB,kBAAlC,EAAsD;AACpD,QAAI,CAACzB,UAAUyB,kBAAV,CAA6BC,cAA7B,CAA4CF,WAA5C,CAAL,EAA+D;AAC7D;AACD;;AAED;AACA;AACA;AACA,QACExB,UAAU0B,cAAV,CAAyBF,WAAzB,KACAxB,UAAUwB,WAAV,EAAuBpB,mBAAvB,KAA+CJ,SAFjD,EAGE;AACA;AACD;;AAED,QAAIC,SAASD,UAAUyB,kBAAV,CAA6BD,WAA7B,CAAb;AACAxB,cAAUwB,WAAV,IAAyBzB,mBAAmBC,SAAnB,EAA8BC,MAA9B,CAAzB;AACD;AACF;;AAEc,SAASH,mBAAT,CAA6BE,SAA7B,EAAwC;AACrD,MAAIA,UAAU2B,oBAAd,EAAoC;AAClCC,iCAA6B5B,SAA7B;AACD,GAFD,MAEO,IAAIA,UAAUyB,kBAAd,EAAkC;AACvCF,+BAA2BvB,SAA3B;AACD;AACF;;AAED,SAAS4B,4BAAT,CAAsC5B,SAAtC,EAAiD;AAC/C,MAAI6B,QAAQ7B,UAAU2B,oBAAtB;;AAEA,MAAI,CAACE,KAAL,EAAY;AACV;AACD;;AAED,OAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAID,MAAMT,MAA1B,EAAkCU,KAAK,CAAvC,EAA0C;AACxC,QAAIN,cAAcK,MAAMC,CAAN,CAAlB;;AAEA,QACE9B,UAAU0B,cAAV,CAAyBF,WAAzB,KACAxB,UAAUwB,WAAV,EAAuBpB,mBAAvB,KAA+CJ,SAFjD,EAGE;AACA;AACD;;AAED,QAAIC,SAAS4B,MAAMC,IAAI,CAAV,CAAb;;AAEA9B,cAAUwB,WAAV,IAAyBzB,mBAAmBC,SAAnB,EAA8BC,MAA9B,CAAzB;AACD;AACF","file":"bindAutoBindMethods.js","sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of React source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * Original:\n * https://github.com/facebook/react/blob/6508b1ad273a6f371e8d90ae676e5390199461b4/src/isomorphic/classic/class/ReactClass.js#L650-L713\n */\n\nfunction bindAutoBindMethod(component, method) {\n  var boundMethod = method.bind(component)\n\n  boundMethod.__reactBoundContext = component\n  boundMethod.__reactBoundMethod = method\n  boundMethod.__reactBoundArguments = null\n\n  var componentName = component.constructor.displayName,\n    _bind = boundMethod.bind\n\n  boundMethod.bind = function(newThis) {\n    var args = Array.prototype.slice.call(arguments, 1)\n    if (newThis !== component && newThis !== null) {\n      console.warn(\n        'bind(): React component methods may only be bound to the ' +\n          'component instance. See ' +\n          componentName\n      )\n    } else if (!args.length) {\n      console.warn(\n        'bind(): You are binding a component method to the component. ' +\n          'React does this for you automatically in a high-performance ' +\n          'way, so you can safely remove this call. See ' +\n          componentName\n      )\n      return boundMethod\n    }\n\n    var reboundMethod = _bind.apply(boundMethod, arguments)\n    reboundMethod.__reactBoundContext = component\n    reboundMethod.__reactBoundMethod = method\n    reboundMethod.__reactBoundArguments = args\n\n    return reboundMethod\n  }\n\n  return boundMethod\n}\n\nfunction bindAutoBindMethodsFromMap(component) {\n  for (var autoBindKey in component.__reactAutoBindMap) {\n    if (!component.__reactAutoBindMap.hasOwnProperty(autoBindKey)) {\n      return\n    }\n\n    // Tweak: skip methods that are already bound.\n    // This is to preserve method reference in case it is used\n    // as a subscription handler that needs to be detached later.\n    if (\n      component.hasOwnProperty(autoBindKey) &&\n      component[autoBindKey].__reactBoundContext === component\n    ) {\n      continue\n    }\n\n    var method = component.__reactAutoBindMap[autoBindKey]\n    component[autoBindKey] = bindAutoBindMethod(component, method)\n  }\n}\n\nexport default function bindAutoBindMethods(component) {\n  if (component.__reactAutoBindPairs) {\n    bindAutoBindMethodsFromArray(component)\n  } else if (component.__reactAutoBindMap) {\n    bindAutoBindMethodsFromMap(component)\n  }\n}\n\nfunction bindAutoBindMethodsFromArray(component) {\n  var pairs = component.__reactAutoBindPairs\n\n  if (!pairs) {\n    return\n  }\n\n  for (var i = 0; i < pairs.length; i += 2) {\n    var autoBindKey = pairs[i]\n\n    if (\n      component.hasOwnProperty(autoBindKey) &&\n      component[autoBindKey].__reactBoundContext === component\n    ) {\n      continue\n    }\n\n    var method = pairs[i + 1]\n\n    component[autoBindKey] = bindAutoBindMethod(component, method)\n  }\n}\n"]}