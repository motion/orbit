{"version":3,"sources":["../src/index.js"],"names":["types","t","template","matchesDecorator","node","decoratorName","decorators","some","item","expression","type","name","callee","isMemberExpression","object","matchesPatterns","path","patterns","pattern","isIdentifier","matchesPattern","isReactLikeClass","body","classMember","isClassMethod","key","isReactLikeComponentObject","isObjectExpression","properties","objectMember","isObjectProperty","isObjectMethod","isStringLiteral","value","getDisplayName","property","arguments","hasParentFunction","findParent","parentPath","isFunction","wrapComponent","componentId","wrapperFunctionId","callExpression","stringLiteral","toObjectExpression","Object","keys","map","objectProperty","identifier","objectExpression","wrapperFunctionTemplate","VISITED_KEY","Date","now","componentVisitor","Class","componentName","id","scope","generateUid","isInFunction","components","push","isStatement","toExpression","wrapped","constId","variableDeclaration","variableDeclarator","isExportDefaultDeclaration","parent","insertBefore","declaration","replaceWith","CallExpression","get","factoryMethods","ReactTransformBuilder","constructor","file","options","program","normalizeOptions","configuredTransformsIds","validateOptions","Array","isArray","transforms","assertValidOptions","Error","superClasses","opts","transform","locals","imports","build","componentsDeclarationId","generateUidIdentifier","collectAndWrapComponents","length","componentsDeclaration","initComponentsDeclaration","configuredTransforms","initTransformers","wrapperFunction","initWrapperFunction","unshift","reverse","forEach","traverse","currentlyInFunction","uniqueId","props","component","componentProps","booleanLiteral","objectKey","isValidIdentifier","transformName","transformImportId","addImport","transformLocals","local","transformImports","importName","configuredTransformId","configuredTransform","filename","arrayExpression","idParam","componentParam","reduce","memo","transformId","WRAPPER_FUNCTION_ID","ID_PARAM","COMPONENT_PARAM","EXPRESSION","visitor","Program","builder"],"mappings":"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","file":"index.js","sourcesContent":["import find from 'lodash/find'\n\nexport default function({ types: t, template }) {\n  function matchesDecorator(node, decoratorName) {\n    return (\n      node.decorators &&\n      node.decorators.some(item => {\n        if (!item.expression) {\n          return false\n        }\n        // @name\n        if (\n          item.expression.type === 'Identifier' &&\n          item.expression.name === decoratorName\n        ) {\n          return true\n        }\n        // @name()\n        if (\n          item.expression.callee &&\n          item.expression.callee.name === decoratorName\n        ) {\n          return true\n        }\n        // @name.something()\n        if (\n          item.expression.callee &&\n          t.isMemberExpression(item.expression.callee) &&\n          item.expression.callee.object.name === decoratorName\n        ) {\n          return true\n        }\n        // @name.something\n        if (\n          item.expression.object &&\n          item.expression.object.name === decoratorName\n        ) {\n          return true\n        }\n        return false\n      })\n    )\n  }\n\n  function matchesPatterns(path, patterns) {\n    return !!find(patterns, pattern => {\n      return (\n        t.isIdentifier(path.node, { name: pattern }) ||\n        path.matchesPattern(pattern)\n      )\n    })\n  }\n\n  function isReactLikeClass(node) {\n    return !!find(node.body.body, classMember => {\n      return (\n        t.isClassMethod(classMember) &&\n        t.isIdentifier(classMember.key, { name: 'render' })\n      )\n    })\n  }\n\n  function isReactLikeComponentObject(node) {\n    return (\n      t.isObjectExpression(node) &&\n      !!find(node.properties, objectMember => {\n        return (\n          (t.isObjectProperty(objectMember) ||\n            t.isObjectMethod(objectMember)) &&\n          (t.isIdentifier(objectMember.key, { name: 'render' }) ||\n            t.isStringLiteral(objectMember.key, { value: 'render' }))\n        )\n      })\n    )\n  }\n\n  // `foo({ displayName: 'NAME' });` => 'NAME'\n  function getDisplayName(node) {\n    const property = find(\n      node.arguments[0].properties,\n      node => node.key.name === 'displayName',\n    )\n    return property && property.value.value\n  }\n\n  function hasParentFunction(path) {\n    return !!path.findParent(parentPath => parentPath.isFunction())\n  }\n\n  // wrapperFunction(\"componentId\")(node)\n  function wrapComponent(node, componentId, wrapperFunctionId) {\n    return t.callExpression(\n      t.callExpression(wrapperFunctionId, [t.stringLiteral(componentId)]),\n      [node],\n    )\n  }\n\n  // `{ name: foo }` => Node { type: \"ObjectExpression\", properties: [...] }\n  function toObjectExpression(object) {\n    const properties = Object.keys(object).map(key => {\n      return t.objectProperty(t.identifier(key), object[key])\n    })\n\n    return t.objectExpression(properties)\n  }\n\n  const wrapperFunctionTemplate = template(`\n    function WRAPPER_FUNCTION_ID(ID_PARAM) {\n      return function(COMPONENT_PARAM) {\n        return EXPRESSION;\n      };\n    }\n  `)\n\n  const VISITED_KEY = 'react-transform-' + Date.now()\n\n  const componentVisitor = {\n    Class(path) {\n      if (\n        path.node[VISITED_KEY] ||\n        !matchesDecorator(path.node, this.decoratorName) ||\n        !isReactLikeClass(path.node)\n      ) {\n        return\n      }\n\n      path.node[VISITED_KEY] = true\n\n      const componentName = (path.node.id && path.node.id.name) || null\n      const componentId = componentName || path.scope.generateUid('component')\n      const isInFunction = hasParentFunction(path)\n\n      this.components.push({\n        id: componentId,\n        name: componentName,\n        isInFunction: isInFunction,\n      })\n\n      // Can't wrap ClassDeclarations\n      const isStatement = t.isStatement(path.node)\n      const expression = t.toExpression(path.node)\n\n      // wrapperFunction(\"componentId\")(node)\n      let wrapped = wrapComponent(\n        expression,\n        componentId,\n        this.wrapperFunctionId,\n      )\n      let constId\n\n      if (isStatement) {\n        // wrapperFunction(\"componentId\")(class Foo ...) => const Foo = wrapperFunction(\"componentId\")(class Foo ...)\n        constId = t.identifier(componentName || componentId)\n        wrapped = t.variableDeclaration('const', [\n          t.variableDeclarator(constId, wrapped),\n        ])\n      }\n\n      if (t.isExportDefaultDeclaration(path.parent)) {\n        path.parentPath.insertBefore(wrapped)\n        path.parent.declaration = constId\n      } else {\n        path.replaceWith(wrapped)\n      }\n    },\n\n    CallExpression(path) {\n      if (\n        path.node[VISITED_KEY] ||\n        !matchesPatterns(path.get('callee'), this.factoryMethods) ||\n        !isReactLikeComponentObject(path.node.arguments[0])\n      ) {\n        return\n      }\n\n      path.node[VISITED_KEY] = true\n\n      // `foo({ displayName: 'NAME' });` => 'NAME'\n      const componentName = getDisplayName(path.node)\n      const componentId = componentName || path.scope.generateUid('component')\n      const isInFunction = hasParentFunction(path)\n\n      this.components.push({\n        id: componentId,\n        name: componentName,\n        isInFunction: isInFunction,\n      })\n\n      path.replaceWith(\n        wrapComponent(path.node, componentId, this.wrapperFunctionId),\n      )\n    },\n  }\n\n  class ReactTransformBuilder {\n    constructor(file, options) {\n      this.file = file\n      this.program = file.path\n      this.options = this.normalizeOptions(options)\n      this.configuredTransformsIds = []\n    }\n\n    static validateOptions(options) {\n      return Array.isArray(options.transforms)\n    }\n\n    static assertValidOptions(options) {\n      if (!ReactTransformBuilder.validateOptions(options)) {\n        throw new Error(\n          'babel-plugin-react-transform requires that you specify options ' +\n            'in .babelrc or from the Babel Node API, and that it is an object ' +\n            'with a transforms property which is an array.',\n        )\n      }\n    }\n\n    normalizeOptions(options) {\n      return {\n        factoryMethods: options.factoryMethods || ['React.createClass'],\n        superClasses: options.superClasses || ['React.Component', 'Component'],\n        decoratorName: options.decoratorName || 'view',\n        transforms: options.transforms.map(opts => {\n          return {\n            transform: opts.transform,\n            locals: opts.locals || [],\n            imports: opts.imports || [],\n          }\n        }),\n      }\n    }\n\n    build() {\n      const componentsDeclarationId = this.file.scope.generateUidIdentifier(\n        'components',\n      )\n      const wrapperFunctionId = this.file.scope.generateUidIdentifier(\n        'wrapComponent',\n      )\n\n      const components = this.collectAndWrapComponents(wrapperFunctionId)\n\n      if (!components.length) {\n        return\n      }\n\n      const componentsDeclaration = this.initComponentsDeclaration(\n        componentsDeclarationId,\n        components,\n      )\n      const configuredTransforms = this.initTransformers(\n        componentsDeclarationId,\n      )\n      const wrapperFunction = this.initWrapperFunction(wrapperFunctionId)\n\n      const body = this.program.node.body\n\n      body.unshift(wrapperFunction)\n      configuredTransforms.reverse().forEach(node => body.unshift(node))\n      body.unshift(componentsDeclaration)\n    }\n\n    /**\n     * const Foo = _wrapComponent('Foo')(class Foo extends React.Component {});\n     * ...\n     * const Bar = _wrapComponent('Bar')(React.createClass({\n     *   displayName: 'Bar'\n     * }));\n     */\n    collectAndWrapComponents(wrapperFunctionId) {\n      const components = []\n\n      this.file.path.traverse(componentVisitor, {\n        wrapperFunctionId: wrapperFunctionId,\n        components: components,\n        factoryMethods: this.options.factoryMethods,\n        superClasses: this.options.superClasses,\n        decoratorName: this.options.decoratorName,\n        currentlyInFunction: false,\n      })\n\n      return components\n    }\n\n    /**\n     * const _components = {\n     *   Foo: {\n     *     displayName: \"Foo\"\n     *   }\n     * };\n     */\n    initComponentsDeclaration(componentsDeclarationId, components) {\n      let uniqueId = 0\n\n      const props = components.map(component => {\n        const componentId = component.id\n        const componentProps = []\n\n        if (component.name) {\n          componentProps.push(\n            t.objectProperty(\n              t.identifier('displayName'),\n              t.stringLiteral(component.name),\n            ),\n          )\n        }\n\n        if (component.isInFunction) {\n          componentProps.push(\n            t.objectProperty(\n              t.identifier('isInFunction'),\n              t.booleanLiteral(true),\n            ),\n          )\n        }\n\n        let objectKey\n\n        if (t.isValidIdentifier(componentId)) {\n          objectKey = t.identifier(componentId)\n        } else {\n          objectKey = t.stringLiteral(componentId)\n        }\n\n        return t.objectProperty(objectKey, t.objectExpression(componentProps))\n      })\n\n      return t.variableDeclaration('const', [\n        t.variableDeclarator(\n          componentsDeclarationId,\n          t.objectExpression(props),\n        ),\n      ])\n    }\n\n    /**\n     * import _transformLib from \"transform-lib\";\n     * ...\n     * const _transformLib2 = _transformLib({\n     *   filename: \"filename\",\n     *   components: _components,\n     *   locals: [],\n     *   imports: []\n     * });\n     */\n    initTransformers(componentsDeclarationId) {\n      return this.options.transforms.map(transform => {\n        const transformName = transform.transform\n        const transformImportId = this.file.addImport(\n          transformName,\n          'default',\n          transformName,\n        )\n\n        const transformLocals = transform.locals.map(local => {\n          return t.identifier(local)\n        })\n\n        const transformImports = transform.imports.map(importName => {\n          return this.file.addImport(importName, 'default', importName)\n        })\n\n        const configuredTransformId = this.file.scope.generateUidIdentifier(\n          transformName,\n        )\n        const configuredTransform = t.variableDeclaration('const', [\n          t.variableDeclarator(\n            configuredTransformId,\n            t.callExpression(transformImportId, [\n              toObjectExpression({\n                filename: t.stringLiteral(this.file.opts.filename),\n                components: componentsDeclarationId,\n                locals: t.arrayExpression(transformLocals),\n                imports: t.arrayExpression(transformImports),\n              }),\n            ]),\n          ),\n        ])\n\n        this.configuredTransformsIds.push(configuredTransformId)\n\n        return configuredTransform\n      })\n    }\n\n    /**\n     * function _wrapComponent(id) {\n     *   return function (Component) {\n     *     return _transformLib2(Component, id);\n     *   };\n     * }\n     */\n    initWrapperFunction(wrapperFunctionId) {\n      const idParam = t.identifier('id')\n      const componentParam = t.identifier('Component')\n\n      const expression = this.configuredTransformsIds\n        .reverse()\n        .reduce((memo, transformId) => {\n          return t.callExpression(transformId, [memo, idParam])\n        }, componentParam)\n\n      return wrapperFunctionTemplate({\n        WRAPPER_FUNCTION_ID: wrapperFunctionId,\n        ID_PARAM: idParam,\n        COMPONENT_PARAM: componentParam,\n        EXPRESSION: expression,\n      })\n    }\n  }\n\n  return {\n    visitor: {\n      Program(path, { file, opts }) {\n        const options = opts || {}\n        ReactTransformBuilder.assertValidOptions(options)\n        const builder = new ReactTransformBuilder(file, options)\n        builder.build()\n      },\n    },\n  }\n}\n"]}