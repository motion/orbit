{"version":3,"sources":["../src/index.js"],"names":["proxyReactComponents","viewProxies","reloaded","createProxy","Klass","mountedInstances","Set","Current","wrap","Base","Thing","Next","name","args","thing","Object","keys","forEach","key","setPrototypeOf","prototype","Proxy","get","target","receiver","add","call","delete","Reflect","update","all","push","instance","instances","filename","components","imports","locals","React","module","hot","accept","Error","forceUpdater","hotReload","console","log","wrapWithProxy","ReactClass","uniqueId","isInFunction","displayName","uid","setTimeout","setInterval","length","join"],"mappings":"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","file":"index.js","sourcesContent":["import window from 'global/window'\nimport { getForceUpdate } from 'react-proxy'\n\nconst viewProxies = {}\nwindow.viewProxies = viewProxies\n\nlet reloaded = []\n\nfunction createProxy(Klass) {\n  const mountedInstances = new Set()\n  let Current = wrap(Klass)\n  let Base = Klass\n\n  function wrap(Thing) {\n    class Next {\n      static get name() {\n        return Thing.name\n      }\n      constructor(...args) {\n        const thing = new Thing(...args)\n        Object.keys(thing).forEach(key => {\n          this[key] = thing[key]\n        })\n      }\n    }\n    Object.setPrototypeOf(\n      Next.prototype,\n      new Proxy(Thing.prototype, {\n        get(target, key, receiver) {\n          if (key === 'componentDidMount') {\n            return function(...args) {\n              mountedInstances.add(this)\n              return (\n                Base.prototype[key] && Base.prototype[key].call(this, ...args)\n              )\n            }\n          }\n          if (key === 'componentWillUnmount') {\n            return function(...args) {\n              mountedInstances.delete(this)\n              return (\n                Base.prototype[key] && Base.prototype[key].call(this, ...args)\n              )\n            }\n          }\n          return Base.prototype[key] || Reflect.get(target, key, receiver)\n        },\n      })\n    )\n    Object.keys(Thing).forEach(key => {\n      Next[key] = Thing[key]\n    })\n    return Next\n  }\n\n  function update(Thing) {\n    Base = Thing\n    const all = []\n    mountedInstances.forEach(instance => {\n      all.push(instance)\n    })\n    return all\n  }\n\n  return {\n    update,\n    get: () => Current,\n    instances: () => mountedInstances,\n  }\n}\n\nexport default function proxyReactComponents({\n  filename,\n  components,\n  imports,\n  locals,\n}) {\n  const [React] = imports\n  const [module] = locals\n  const [{ hot }] = locals\n\n  if (!hot || typeof hot.accept !== 'function') {\n    throw new Error(\n      'locals[0] does not appear to be a `module` object with Hot Module ' +\n        'replacement API enabled. You should disable react-transform-hmr in ' +\n        'production by using `env` section in Babel configuration. See the ' +\n        'example in README: https://github.com/gaearon/react-transform-hmr'\n    )\n  }\n\n  const forceUpdater = getForceUpdate(React || window.React)\n\n  const hotReload = instance => {\n    console.log('GOT AN', instance)\n    forceUpdater(instance)\n  }\n\n  return function wrapWithProxy(ReactClass, uniqueId) {\n    const { isInFunction = false, displayName = uniqueId } = components[\n      uniqueId\n    ]\n    const uid = filename + '$' + uniqueId\n\n    if (isInFunction) {\n      return ReactClass\n    }\n\n    module.hot.accept(() => {\n      console.log('just accepting', uid)\n    })\n\n    // if existing proxy\n    if (viewProxies[uid]) {\n      reloaded.push(displayName)\n      const instances = viewProxies[uid].update(ReactClass)\n      log('got instances', instances)\n      setTimeout(() => instances.forEach(hotReload))\n    } else {\n      viewProxies[uid] = createProxy(ReactClass)\n    }\n\n    return viewProxies[uid].get()\n  }\n}\n\nsetInterval(() => {\n  if (reloaded.length) {\n    console.log(`[HMR] views: ${reloaded.join(', ')}`)\n    reloaded = []\n  }\n}, 1000)\n"]}