{"version":3,"sources":["../src/index.js"],"names":["proxyReactComponents","viewProxies","reloaded","createProxy","Klass","mountedInstances","WeakMap","Current","update","Thing","thingProto","prototype","Proxy","get","target","name","receiver","Reflect","Object","keys","map","k","instances","filename","components","imports","locals","React","module","hot","accept","Error","forceUpdater","wrapWithProxy","ReactClass","uniqueId","isInFunction","displayName","uid","log","console","push","setTimeout","forEach","instance","handleHotReload","setInterval","length","join"],"mappings":"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","file":"index.js","sourcesContent":["import window from 'global/window'\nimport { getForceUpdate } from 'react-proxy'\n\nconst viewProxies = {}\nwindow.viewProxies = viewProxies\n\nlet reloaded = []\n\nfunction createProxy(Klass) {\n  const mountedInstances = new WeakMap()\n  let Current\n\n  update(Klass)\n\n  function update(Thing) {\n    // wrap\n    Current = Thing\n\n    const thingProto = Thing.prototype\n    Current.prototype = new Proxy(thingProto, {\n      get(target, name, receiver) {\n        if (name === 'componentDidMount') {\n          mountedInstances[target] = target\n        }\n        if (name === 'componentWillUnmount') {\n          delete mountedInstances[target]\n        }\n        return Reflect.get(target, name, receiver)\n      },\n    })\n\n    // update\n    return Object.keys(mountedInstances).map(k => {\n      mountedInstances[k] = Current\n      return mountedInstances[k]\n    })\n  }\n\n  return {\n    update,\n    get: () => Current,\n    instances: () => mountedInstances,\n  }\n}\n\nexport default function proxyReactComponents({\n  filename,\n  components,\n  imports,\n  locals,\n}) {\n  const [React] = imports\n  const [module] = locals\n  const [{ hot }] = locals\n\n  if (!hot || typeof hot.accept !== 'function') {\n    throw new Error(\n      'locals[0] does not appear to be a `module` object with Hot Module ' +\n        'replacement API enabled. You should disable react-transform-hmr in ' +\n        'production by using `env` section in Babel configuration. See the ' +\n        'example in README: https://github.com/gaearon/react-transform-hmr'\n    )\n  }\n\n  const forceUpdater = getForceUpdate(React || window.React)\n\n  return function wrapWithProxy(ReactClass, uniqueId) {\n    const { isInFunction = false, displayName = uniqueId } = components[\n      uniqueId\n    ]\n    const uid = filename + '$' + uniqueId\n    log('HMR', uid)\n\n    if (isInFunction) {\n      return ReactClass\n    }\n\n    module.hot.accept(() => {\n      console.log('just accepting', uid)\n    })\n\n    // if existing proxy\n    if (viewProxies[uid]) {\n      reloaded.push(displayName)\n      const instances = viewProxies[uid].update(ReactClass)\n      setTimeout(() =>\n        instances.forEach(instance => {\n          log('HANDLE HMR', instance)\n          if (instance.handleHotReload) {\n            instance.handleHotReload(module, forceUpdater(instance))\n          }\n        })\n      )\n    } else {\n      viewProxies[uid] = createProxy(ReactClass)\n    }\n\n    return viewProxies[uid].get()\n  }\n}\n\nsetInterval(() => {\n  if (reloaded.length) {\n    console.log(`[HMR] views: ${reloaded.join(', ')}`)\n    reloaded = []\n  }\n}, 1000)\n"]}