{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport { FullScreen } from '@o/ui';\nimport React, { useLayoutEffect, useState } from 'react';\nimport { BrandMark } from '../views/LogoVertical';\nvar hideProps = {\n  opacity: 0,\n  pointerEvents: 'none'\n};\nexport function LoadingPage() {\n  var [loading, setLoading] = useState(true);\n  useLayoutEffect(() => {\n    onLoadAllImages().then(() => {\n      window['requestIdleCallback'](() => {\n        setLoading(false);\n      });\n    });\n  }, []);\n  return React.createElement(FullScreen, _extends({\n    transition: \"all ease 300ms\",\n    opacity: 1,\n    background: theme => theme.background,\n    zIndex: 10000000,\n    position: \"fixed\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }, !loading && hideProps), React.createElement(BrandMark, {\n    id: \"orbit-mark\"\n  }));\n}\n\n__signature__(LoadingPage, \"useState{[loading, setLoading](true)}\\nuseLayoutEffect{}\");\n\nLoadingPage.displayName = \"LoadingPage\";\n\nfunction onLoadAllImages() {\n  return new Promise(res => {\n    var imgs = Array.from(document.images).filter(x => !x.complete);\n    var len = imgs.length;\n    var counter = 0;\n    if (!len) return res();\n\n    for (var img of imgs) {\n      img.addEventListener('load', incrementCounter, false);\n    }\n\n    function incrementCounter() {\n      counter++;\n      console.log('count', counter);\n\n      if (counter === len) {\n        res();\n      }\n    }\n  });\n}\n\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(hideProps, \"hideProps\", \"/Users/nw/projects/motion/orbit/projects/site/pages/LoadingPage.tsx\");\n  reactHotLoader.register(LoadingPage, \"LoadingPage\", \"/Users/nw/projects/motion/orbit/projects/site/pages/LoadingPage.tsx\");\n  reactHotLoader.register(onLoadAllImages, \"onLoadAllImages\", \"/Users/nw/projects/motion/orbit/projects/site/pages/LoadingPage.tsx\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/nw/projects/motion/orbit/projects/site/pages/LoadingPage.tsx"],"names":["FullScreen","React","useLayoutEffect","useState","BrandMark","hideProps","opacity","pointerEvents","LoadingPage","loading","setLoading","onLoadAllImages","then","window","theme","background","Promise","res","imgs","Array","from","document","images","filter","x","complete","len","length","counter","img","addEventListener","incrementCounter","console","log"],"mappings":";;;;;;;;;;;AAAA,SAASA,UAAT,QAAsC,OAAtC;AACA,OAAOC,KAAP,IAAgBC,eAAhB,EAAiCC,QAAjC,QAAiD,OAAjD;AAEA,SAASC,SAAT,QAA0B,uBAA1B;AAEA,IAAMC,SAAoB,GAAG;AAC3BC,EAAAA,OAAO,EAAE,CADkB;AAE3BC,EAAAA,aAAa,EAAE;AAFY,CAA7B;AAKA,OAAO,SAASC,WAAT,GAAuB;AAC5B,MAAI,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAApC;AAEAD,EAAAA,eAAe,CAAC,MAAM;AACpBS,IAAAA,eAAe,GAAGC,IAAlB,CAAuB,MAAM;AAC3BC,MAAAA,MAAM,CAAC,qBAAD,CAAN,CAA8B,MAAM;AAClCH,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAFD;AAGD,KAJD;AAKD,GANc,EAMZ,EANY,CAAf;AAQA,SACE,oBAAC,UAAD;AACE,IAAA,UAAU,EAAC,gBADb;AAEE,IAAA,OAAO,EAAE,CAFX;AAGE,IAAA,UAAU,EAAEI,KAAK,IAAIA,KAAK,CAACC,UAH7B;AAIE,IAAA,MAAM,EAAE,QAJV;AAKE,IAAA,QAAQ,EAAC,OALX;AAME,IAAA,UAAU,EAAC,QANb;AAOE,IAAA,cAAc,EAAC;AAPjB,KAQM,CAACN,OAAD,IAAYJ,SARlB,GAUE,oBAAC,SAAD;AAAW,IAAA,EAAE,EAAC;AAAd,IAVF,CADF;AAcD;;cAzBeG,W;;AAAAA,W;;AA2BhB,SAASG,eAAT,GAA2B;AACzB,SAAO,IAAIK,OAAJ,CAAYC,GAAG,IAAI;AACxB,QAAIC,IAAI,GAAGC,KAAK,CAACC,IAAN,CAAWC,QAAQ,CAACC,MAApB,EAA4BC,MAA5B,CAAmCC,CAAC,IAAI,CAACA,CAAC,CAACC,QAA3C,CAAX;AACA,QAAIC,GAAG,GAAGR,IAAI,CAACS,MAAf;AACA,QAAIC,OAAO,GAAG,CAAd;AAEA,QAAI,CAACF,GAAL,EAAU,OAAOT,GAAG,EAAV;;AAEV,SAAK,IAAMY,GAAX,IAAkBX,IAAlB,EAAwB;AACtBW,MAAAA,GAAG,CAACC,gBAAJ,CAAqB,MAArB,EAA6BC,gBAA7B,EAA+C,KAA/C;AACD;;AAED,aAASA,gBAAT,GAA4B;AAC1BH,MAAAA,OAAO;AACPI,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBL,OAArB;;AACA,UAAIA,OAAO,KAAKF,GAAhB,EAAqB;AACnBT,QAAAA,GAAG;AACJ;AACF;AACF,GAlBM,CAAP;AAmBD;;;;;;;;;;;0BApDKZ,S;0BAKUG,W;0BA2BPG,e","sourcesContent":["import { FullScreen, ViewProps } from '@o/ui'\nimport React, { useLayoutEffect, useState } from 'react'\n\nimport { BrandMark } from '../views/LogoVertical'\n\nconst hideProps: ViewProps = {\n  opacity: 0,\n  pointerEvents: 'none',\n}\n\nexport function LoadingPage() {\n  let [loading, setLoading] = useState(true)\n\n  useLayoutEffect(() => {\n    onLoadAllImages().then(() => {\n      window['requestIdleCallback'](() => {\n        setLoading(false)\n      })\n    })\n  }, [])\n\n  return (\n    <FullScreen\n      transition=\"all ease 300ms\"\n      opacity={1}\n      background={theme => theme.background}\n      zIndex={10000000}\n      position=\"fixed\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      {...!loading && hideProps}\n    >\n      <BrandMark id=\"orbit-mark\" />\n    </FullScreen>\n  )\n}\n\nfunction onLoadAllImages() {\n  return new Promise(res => {\n    let imgs = Array.from(document.images).filter(x => !x.complete)\n    let len = imgs.length\n    let counter = 0\n\n    if (!len) return res()\n\n    for (const img of imgs) {\n      img.addEventListener('load', incrementCounter, false)\n    }\n\n    function incrementCounter() {\n      counter++\n      console.log('count', counter)\n      if (counter === len) {\n        res()\n      }\n    }\n  })\n}\n"]},"metadata":{},"sourceType":"module"}