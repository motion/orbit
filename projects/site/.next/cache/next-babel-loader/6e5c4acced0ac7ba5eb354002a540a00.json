{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useEffect, useState } from 'react';\n/**\n * Loading bar at top of browser\n */\n\nvar baseClass = 'BusyIndicator-' + Math.random().toString(36).slice(2); // Add busy indicator stylesheet\n\nvar baseStyle = document.createElement('style');\nbaseStyle.type = 'text/css';\nbaseStyle.innerHTML = \"\\n.\" + baseClass + \" {\\n  position: fixed;\\n  height: 2px;\\n  width: 100%;\\n  top: 0;\\n  left: 0;\\n  z-index: 100000000000000000000000;\\n  transform: scaleX(0);\\n  transform-origin: left center;\\n  transition: transform ease-in 300ms, opacity ease-in 300ms;\\n  transition-delay: 0;\\n  opacity: 0;\\n}\\n.\" + baseClass + \".active {\\n  animation: \" + baseClass + \" 5s cubic-bezier(.2,.45,.6,.55);\\n  animation-fill-mode: forwards;\\n  opacity: 1;\\n}\\n\\n@keyframes \" + baseClass + \" {\\n  0% {\\n    transform: scaleX(0);\\n  }\\n  10% {\\n    transform: scaleX(0.3);\\n  }\\n  50% {\\n    transform: scaleX(0.7);\\n  }\\n  90% {\\n    transform: scaleX(0.8);\\n  }\\n  100% {\\n    transform: scaleX(1);\\n  }\\n}\";\ndocument.getElementsByTagName('head')[0].appendChild(baseStyle);\nexport function BusyIndicator(_ref) {\n  var {\n    className,\n    color,\n    isBusy,\n    delayMs,\n    style\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, [\"className\", \"color\", \"isBusy\", \"delayMs\", \"style\"]);\n\n  var [hasRendered, setHasRendered] = useState(false);\n  var isActive = isBusy; // Prevent the `active` class from being applied on the first render,\n  // to allow the CSS animation's delay prop to work even if `isActive`\n  // is true when the component is mounted.\n\n  useEffect(() => {\n    if (!hasRendered) {\n      isActive = false;\n      var tm = setTimeout(() => setHasRendered(true));\n      return () => clearTimeout(tm);\n    }\n  }); // Only add the `active` class to this element while the\n  // next page is loading, triggering a CSS animation to\n  // show or hide the loading bar.\n\n  return React.createElement('div', _extends({}, props, {\n    className: baseClass + \" \" + (isActive ? 'active' : '') + \" \" + (className || ''),\n    style: _extends({\n      backgroundColor: color,\n      boxShadow: \"0 1px 2px rgba(0, 0, 0, 0.2) inset, 0 0 15px \" + color + \", 0 0 15px \" + color\n    }, isActive ? {\n      transitionDelay: (delayMs || 0) + 'ms'\n    } : {}, {}, style)\n  }));\n}\n\n__signature__(BusyIndicator, \"useState{[hasRendered, setHasRendered](false)}\\nuseEffect{}\");\n\nBusyIndicator.defaultProps = {\n  color: '#F54391',\n  delayMs: 333\n};\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(baseClass, \"baseClass\", \"/Users/nw/projects/motion/orbit/projects/site/views/BusyIndicator.tsx\");\n  reactHotLoader.register(baseStyle, \"baseStyle\", \"/Users/nw/projects/motion/orbit/projects/site/views/BusyIndicator.tsx\");\n  reactHotLoader.register(BusyIndicator, \"BusyIndicator\", \"/Users/nw/projects/motion/orbit/projects/site/views/BusyIndicator.tsx\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/nw/projects/motion/orbit/projects/site/views/BusyIndicator.tsx"],"names":["React","useEffect","useState","baseClass","Math","random","toString","slice","baseStyle","document","createElement","type","innerHTML","getElementsByTagName","appendChild","BusyIndicator","className","color","isBusy","delayMs","style","props","hasRendered","setHasRendered","isActive","tm","setTimeout","clearTimeout","backgroundColor","boxShadow","transitionDelay","defaultProps"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA;;;;AAIA,IAAMC,SAAS,GACb,mBACAC,IAAI,CAACC,MAAL,GACGC,QADH,CACY,EADZ,EAEGC,KAFH,CAES,CAFT,CAFF,C,CAMA;;AACA,IAAIC,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAhB;AACAF,SAAS,CAACG,IAAV,GAAiB,UAAjB;AACAH,SAAS,CAACI,SAAV,WACGT,SADH,kSAcGA,SAdH,gCAeeA,SAff,2GAoBaA,SApBb;AAqCAM,QAAQ,CAACI,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,EAAyCC,WAAzC,CAAqDN,SAArD;AAQA,OAAO,SAASO,aAAT,OAOgB;AAAA,MAPO;AAC5BC,IAAAA,SAD4B;AAE5BC,IAAAA,KAF4B;AAG5BC,IAAAA,MAH4B;AAI5BC,IAAAA,OAJ4B;AAK5BC,IAAAA;AAL4B,GAOP;AAAA,MADlBC,KACkB;;AACrB,MAAI,CAACC,WAAD,EAAcC,cAAd,IAAgCrB,QAAQ,CAAC,KAAD,CAA5C;AACA,MAAIsB,QAAQ,GAAGN,MAAf,CAFqB,CAIrB;AACA;AACA;;AACAjB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACqB,WAAL,EAAkB;AAChBE,MAAAA,QAAQ,GAAG,KAAX;AACA,UAAIC,EAAE,GAAGC,UAAU,CAAC,MAAMH,cAAc,CAAC,IAAD,CAArB,CAAnB;AACA,aAAO,MAAMI,YAAY,CAACF,EAAD,CAAzB;AACD;AACF,GANQ,CAAT,CAPqB,CAerB;AACA;AACA;;AACA,SAAOzB,KAAK,CAACU,aAAN,CAAoB,KAApB,eACFW,KADE;AAELL,IAAAA,SAAS,EAAKb,SAAL,UAAkBqB,QAAQ,GAAG,QAAH,GAAc,EAAxC,WAA8CR,SAAS,IAAI,EAA3D,CAFJ;AAGLI,IAAAA,KAAK;AACHQ,MAAAA,eAAe,EAAEX,KADd;AAEHY,MAAAA,SAAS,oDAAkDZ,KAAlD,mBAAqEA;AAF3E,OAICO,QAAQ,GACR;AACEM,MAAAA,eAAe,EAAE,CAACX,OAAO,IAAI,CAAZ,IAAiB;AADpC,KADQ,GAIR,EARD,MAUAC,KAVA;AAHA,KAAP;AAgBD;;cAzCeL,a;;AA2ChBA,aAAa,CAACgB,YAAd,GAA6B;AAC3Bd,EAAAA,KAAK,EAAE,SADoB;AAE3BE,EAAAA,OAAO,EAAE;AAFkB,CAA7B;;;;;;;;;;0BAjGMhB,S;0BAOFK,S;0BA+CYO,a","sourcesContent":["import React, { useEffect, useState } from 'react'\n\n/**\n * Loading bar at top of browser\n */\n\nconst baseClass =\n  'BusyIndicator-' +\n  Math.random()\n    .toString(36)\n    .slice(2)\n\n// Add busy indicator stylesheet\nvar baseStyle = document.createElement('style')\nbaseStyle.type = 'text/css'\nbaseStyle.innerHTML = `\n.${baseClass} {\n  position: fixed;\n  height: 2px;\n  width: 100%;\n  top: 0;\n  left: 0;\n  z-index: 100000000000000000000000;\n  transform: scaleX(0);\n  transform-origin: left center;\n  transition: transform ease-in 300ms, opacity ease-in 300ms;\n  transition-delay: 0;\n  opacity: 0;\n}\n.${baseClass}.active {\n  animation: ${baseClass} 5s cubic-bezier(.2,.45,.6,.55);\n  animation-fill-mode: forwards;\n  opacity: 1;\n}\n\n@keyframes ${baseClass} {\n  0% {\n    transform: scaleX(0);\n  }\n  10% {\n    transform: scaleX(0.3);\n  }\n  50% {\n    transform: scaleX(0.7);\n  }\n  90% {\n    transform: scaleX(0.8);\n  }\n  100% {\n    transform: scaleX(1);\n  }\n}`\ndocument.getElementsByTagName('head')[0].appendChild(baseStyle)\n\ninterface BusyIndicatorProps extends React.HTMLAttributes<any> {\n  color?: string\n  delayMs?: number\n  isBusy?: boolean\n}\n\nexport function BusyIndicator({\n  className,\n  color,\n  isBusy,\n  delayMs,\n  style,\n  ...props\n}: BusyIndicatorProps) {\n  let [hasRendered, setHasRendered] = useState(false)\n  let isActive = isBusy\n\n  // Prevent the `active` class from being applied on the first render,\n  // to allow the CSS animation's delay prop to work even if `isActive`\n  // is true when the component is mounted.\n  useEffect(() => {\n    if (!hasRendered) {\n      isActive = false\n      let tm = setTimeout(() => setHasRendered(true))\n      return () => clearTimeout(tm)\n    }\n  })\n\n  // Only add the `active` class to this element while the\n  // next page is loading, triggering a CSS animation to\n  // show or hide the loading bar.\n  return React.createElement('div', {\n    ...props,\n    className: `${baseClass} ${isActive ? 'active' : ''} ${className || ''}`,\n    style: {\n      backgroundColor: color,\n      boxShadow: `0 1px 2px rgba(0, 0, 0, 0.2) inset, 0 0 15px ${color}, 0 0 15px ${color}`,\n\n      ...(isActive\n        ? {\n            transitionDelay: (delayMs || 0) + 'ms',\n          }\n        : {}),\n\n      ...style,\n    },\n  })\n}\n\nBusyIndicator.defaultProps = {\n  color: '#F54391',\n  delayMs: 333,\n}\n"]},"metadata":{},"sourceType":"module"}