{"ast":null,"code":"(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\n// Only used for the dirty checking, so the event callback count is limited to max 1 call per fps per sensor.\n// In combination with the event based resize sensor this saves cpu time, because the sensor is too fast and\n// would generate too many unnecessary events.\nvar requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || function (fn) {\n  return window.setTimeout(fn, 20);\n};\n/**\n * Iterate over each of the provided element(s).\n *\n * @param {HTMLElement|HTMLElement[]} elements\n * @param {Function}                  callback\n */\n\n\nfunction forEachElement(elements, callback) {\n  var elementsType = Object.prototype.toString.call(elements);\n  var isCollectionTyped = '[object Array]' === elementsType || '[object NodeList]' === elementsType || '[object HTMLCollection]' === elementsType || '[object Object]' === elementsType || 'undefined' !== typeof jQuery && elements instanceof jQuery || //jquery\n  'undefined' !== typeof Elements && elements instanceof Elements; //mootools\n\n  var i = 0,\n      j = elements.length;\n\n  if (isCollectionTyped) {\n    for (; i < j; i++) {\n      callback(elements[i]);\n    }\n  } else {\n    callback(elements);\n  }\n}\n/**\n * Get element size\n * @param {HTMLElement} element\n * @returns {Object} {width, height}\n */\n\n\nfunction getElementSize(element) {\n  if (!element.getBoundingClientRect) {\n    return {\n      width: element.offsetWidth,\n      height: element.offsetHeight\n    };\n  }\n\n  var rect = element.getBoundingClientRect();\n  return {\n    width: Math.round(rect.width),\n    height: Math.round(rect.height)\n  };\n}\n/**\n * Class for dimension change detection.\n *\n * @param {Element|Element[]|Elements|jQuery} element\n * @param {Function} callback\n *\n * @constructor\n */\n\n\nexport var ResizeSensor = function ResizeSensor(element, callback) {\n  /**\n   *\n   * @constructor\n   */\n  function EventQueue() {\n    var q = [];\n\n    this.add = function (ev) {\n      q.push(ev);\n    };\n\n    var i, j;\n\n    this.call = function (sizeInfo) {\n      for (i = 0, j = q.length; i < j; i++) {\n        q[i].call(this, sizeInfo);\n      }\n    };\n\n    this.remove = function (ev) {\n      var newQueue = [];\n\n      for (i = 0, j = q.length; i < j; i++) {\n        if (q[i] !== ev) newQueue.push(q[i]);\n      }\n\n      q = newQueue;\n    };\n\n    this.length = function () {\n      return q.length;\n    };\n  }\n  /**\n   *\n   * @param {HTMLElement} element\n   * @param {Function}    resized\n   */\n\n\n  function attachResizeEvent(element, resized) {\n    if (!element) return;\n\n    if (element.resizedAttached) {\n      element.resizedAttached.add(resized);\n      return;\n    }\n\n    element.resizedAttached = new EventQueue();\n    element.resizedAttached.add(resized);\n    element.resizeSensor = document.createElement('div');\n    element.resizeSensor.dir = 'ltr';\n    element.resizeSensor.className = 'resize-sensor';\n    var style = 'pointer-events: none; position: absolute; left: 0px; top: 0px; right: 0; bottom: 0; ' + 'overflow: hidden; z-index: -1; visibility: hidden; max-width: 100%;';\n    var styleChild = 'position: absolute; left: 0; top: 0; transition: 0s;';\n    element.resizeSensor.style.cssText = style;\n    element.resizeSensor.innerHTML = '<div class=\"resize-sensor-expand\" style=\"' + style + '\">' + '<div style=\"' + styleChild + '\"></div>' + '</div>' + '<div class=\"resize-sensor-shrink\" style=\"' + style + '\">' + '<div style=\"' + styleChild + ' width: 200%; height: 200%\"></div>' + '</div>';\n    element.appendChild(element.resizeSensor);\n    var computedStyle = window.getComputedStyle(element);\n    var position = computedStyle ? computedStyle.getPropertyValue('position') : null;\n\n    if ('absolute' !== position && 'relative' !== position && 'fixed' !== position) {\n      element.style.position = 'relative';\n    }\n\n    var expand = element.resizeSensor.childNodes[0];\n    var expandChild = expand.childNodes[0];\n    var shrink = element.resizeSensor.childNodes[1];\n    var dirty, rafId;\n    var size = getElementSize(element);\n    var lastWidth = size.width;\n    var lastHeight = size.height;\n    var initialHiddenCheck = true;\n    var lastAnimationFrame = 0;\n\n    var resetExpandShrink = function resetExpandShrink() {\n      var width = element.offsetWidth;\n      var height = element.offsetHeight;\n      expandChild.style.width = width + 10 + 'px';\n      expandChild.style.height = height + 10 + 'px';\n      expand.scrollLeft = width + 10;\n      expand.scrollTop = height + 10;\n      shrink.scrollLeft = width + 10;\n      shrink.scrollTop = height + 10;\n    };\n\n    var reset = function reset() {\n      // Check if element is hidden\n      if (initialHiddenCheck) {\n        var invisible = element.offsetWidth === 0 && element.offsetHeight === 0;\n\n        if (invisible) {\n          // Check in next frame\n          if (!lastAnimationFrame) {\n            lastAnimationFrame = requestAnimationFrame(function () {\n              lastAnimationFrame = 0;\n              reset();\n            });\n          }\n\n          return;\n        } else {\n          // Stop checking\n          initialHiddenCheck = false;\n        }\n      }\n\n      resetExpandShrink();\n    };\n\n    element.resizeSensor.resetSensor = reset;\n\n    var onResized = function onResized() {\n      rafId = 0;\n      if (!dirty) return;\n      lastWidth = size.width;\n      lastHeight = size.height;\n\n      if (element.resizedAttached) {\n        element.resizedAttached.call(size);\n      }\n    };\n\n    var onScroll = function onScroll() {\n      size = getElementSize(element);\n      dirty = size.width !== lastWidth || size.height !== lastHeight;\n\n      if (dirty && !rafId) {\n        rafId = requestAnimationFrame(onResized);\n      }\n\n      reset();\n    };\n\n    var addEvent = function addEvent(el, name, cb) {\n      if (el.attachEvent) {\n        el.attachEvent('on' + name, cb);\n      } else {\n        el.addEventListener(name, cb, {\n          passive: true\n        });\n      }\n    };\n\n    addEvent(expand, 'scroll', onScroll);\n    addEvent(shrink, 'scroll', onScroll); // Fix for custom Elements\n\n    requestAnimationFrame(reset);\n  }\n\n  forEachElement(element, function (elem) {\n    attachResizeEvent(elem, callback);\n  });\n\n  this.detach = function (ev) {\n    ResizeSensor.detach(element, ev);\n  };\n\n  this.reset = function () {\n    element.resizeSensor.resetSensor();\n  };\n};\n\nResizeSensor.reset = function (element) {\n  forEachElement(element, function (elem) {\n    elem.resizeSensor.resetSensor();\n  });\n};\n\nResizeSensor.detach = function (element, ev) {\n  forEachElement(element, function (elem) {\n    if (!elem) return;\n\n    if (elem.resizedAttached && typeof ev === 'function') {\n      elem.resizedAttached.remove(ev);\n      if (elem.resizedAttached.length()) return;\n    }\n\n    if (elem.resizeSensor) {\n      if (elem.contains(elem.resizeSensor)) {\n        elem.removeChild(elem.resizeSensor);\n      }\n\n      delete elem.resizeSensor;\n      delete elem.resizedAttached;\n    }\n  });\n};\n\nif (typeof MutationObserver !== 'undefined') {\n  var observer = new MutationObserver(function (mutations) {\n    for (var i in mutations) {\n      if (mutations.hasOwnProperty(i)) {\n        var items = mutations[i].addedNodes;\n\n        for (var j = 0; j < items.length; j++) {\n          if (items[j].resizeSensor) {\n            ResizeSensor.reset(items[j]);\n          }\n        }\n      }\n    }\n  });\n  document.addEventListener('DOMContentLoaded', function (event) {\n    observer.observe(document.body, {\n      childList: true,\n      subtree: true\n    });\n  });\n}\n\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(requestAnimationFrame, \"requestAnimationFrame\", \"/Users/nw/projects/motion/orbit/projects/site/pages/DocsPage/ResizeSensor.ts\");\n  reactHotLoader.register(forEachElement, \"forEachElement\", \"/Users/nw/projects/motion/orbit/projects/site/pages/DocsPage/ResizeSensor.ts\");\n  reactHotLoader.register(getElementSize, \"getElementSize\", \"/Users/nw/projects/motion/orbit/projects/site/pages/DocsPage/ResizeSensor.ts\");\n  reactHotLoader.register(ResizeSensor, \"ResizeSensor\", \"/Users/nw/projects/motion/orbit/projects/site/pages/DocsPage/ResizeSensor.ts\");\n  reactHotLoader.register(observer, \"observer\", \"/Users/nw/projects/motion/orbit/projects/site/pages/DocsPage/ResizeSensor.ts\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/nw/projects/motion/orbit/projects/site/pages/DocsPage/ResizeSensor.ts"],"names":["requestAnimationFrame","window","mozRequestAnimationFrame","webkitRequestAnimationFrame","fn","setTimeout","forEachElement","elements","callback","elementsType","Object","prototype","toString","call","isCollectionTyped","jQuery","Elements","i","j","length","getElementSize","element","getBoundingClientRect","width","offsetWidth","height","offsetHeight","rect","Math","round","ResizeSensor","EventQueue","q","add","ev","push","sizeInfo","remove","newQueue","attachResizeEvent","resized","resizedAttached","resizeSensor","document","createElement","dir","className","style","styleChild","cssText","innerHTML","appendChild","computedStyle","getComputedStyle","position","getPropertyValue","expand","childNodes","expandChild","shrink","dirty","rafId","size","lastWidth","lastHeight","initialHiddenCheck","lastAnimationFrame","resetExpandShrink","scrollLeft","scrollTop","reset","invisible","resetSensor","onResized","onScroll","addEvent","el","name","cb","attachEvent","addEventListener","passive","elem","detach","contains","removeChild","MutationObserver","observer","mutations","hasOwnProperty","items","addedNodes","event","observe","body","childList","subtree"],"mappings":"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","sourcesContent":["// Only used for the dirty checking, so the event callback count is limited to max 1 call per fps per sensor.\n// In combination with the event based resize sensor this saves cpu time, because the sensor is too fast and\n// would generate too many unnecessary events.\nvar requestAnimationFrame =\n  window.requestAnimationFrame ||\n  window.mozRequestAnimationFrame ||\n  window.webkitRequestAnimationFrame ||\n  function(fn) {\n    return window.setTimeout(fn, 20)\n  }\n\n/**\n * Iterate over each of the provided element(s).\n *\n * @param {HTMLElement|HTMLElement[]} elements\n * @param {Function}                  callback\n */\nfunction forEachElement(elements, callback) {\n  var elementsType = Object.prototype.toString.call(elements)\n  var isCollectionTyped =\n    '[object Array]' === elementsType ||\n    '[object NodeList]' === elementsType ||\n    '[object HTMLCollection]' === elementsType ||\n    '[object Object]' === elementsType ||\n    ('undefined' !== typeof jQuery && elements instanceof jQuery) || //jquery\n    ('undefined' !== typeof Elements && elements instanceof Elements) //mootools\n  var i = 0,\n    j = elements.length\n  if (isCollectionTyped) {\n    for (; i < j; i++) {\n      callback(elements[i])\n    }\n  } else {\n    callback(elements)\n  }\n}\n\n/**\n * Get element size\n * @param {HTMLElement} element\n * @returns {Object} {width, height}\n */\nfunction getElementSize(element) {\n  if (!element.getBoundingClientRect) {\n    return {\n      width: element.offsetWidth,\n      height: element.offsetHeight,\n    }\n  }\n\n  var rect = element.getBoundingClientRect()\n  return {\n    width: Math.round(rect.width),\n    height: Math.round(rect.height),\n  }\n}\n\n/**\n * Class for dimension change detection.\n *\n * @param {Element|Element[]|Elements|jQuery} element\n * @param {Function} callback\n *\n * @constructor\n */\nexport var ResizeSensor = function(element, callback) {\n  /**\n   *\n   * @constructor\n   */\n  function EventQueue() {\n    var q = []\n    this.add = function(ev) {\n      q.push(ev)\n    }\n\n    var i, j\n    this.call = function(sizeInfo) {\n      for (i = 0, j = q.length; i < j; i++) {\n        q[i].call(this, sizeInfo)\n      }\n    }\n\n    this.remove = function(ev) {\n      var newQueue = []\n      for (i = 0, j = q.length; i < j; i++) {\n        if (q[i] !== ev) newQueue.push(q[i])\n      }\n      q = newQueue\n    }\n\n    this.length = function() {\n      return q.length\n    }\n  }\n\n  /**\n   *\n   * @param {HTMLElement} element\n   * @param {Function}    resized\n   */\n  function attachResizeEvent(element, resized) {\n    if (!element) return\n    if (element.resizedAttached) {\n      element.resizedAttached.add(resized)\n      return\n    }\n\n    element.resizedAttached = new EventQueue()\n    element.resizedAttached.add(resized)\n\n    element.resizeSensor = document.createElement('div')\n    element.resizeSensor.dir = 'ltr'\n    element.resizeSensor.className = 'resize-sensor'\n    var style =\n      'pointer-events: none; position: absolute; left: 0px; top: 0px; right: 0; bottom: 0; ' +\n      'overflow: hidden; z-index: -1; visibility: hidden; max-width: 100%;'\n    var styleChild = 'position: absolute; left: 0; top: 0; transition: 0s;'\n\n    element.resizeSensor.style.cssText = style\n    element.resizeSensor.innerHTML =\n      '<div class=\"resize-sensor-expand\" style=\"' +\n      style +\n      '\">' +\n      '<div style=\"' +\n      styleChild +\n      '\"></div>' +\n      '</div>' +\n      '<div class=\"resize-sensor-shrink\" style=\"' +\n      style +\n      '\">' +\n      '<div style=\"' +\n      styleChild +\n      ' width: 200%; height: 200%\"></div>' +\n      '</div>'\n    element.appendChild(element.resizeSensor)\n\n    var computedStyle = window.getComputedStyle(element)\n    var position = computedStyle ? computedStyle.getPropertyValue('position') : null\n    if ('absolute' !== position && 'relative' !== position && 'fixed' !== position) {\n      element.style.position = 'relative'\n    }\n\n    var expand = element.resizeSensor.childNodes[0]\n    var expandChild = expand.childNodes[0]\n    var shrink = element.resizeSensor.childNodes[1]\n    var dirty, rafId\n    var size = getElementSize(element)\n    var lastWidth = size.width\n    var lastHeight = size.height\n    var initialHiddenCheck = true\n    var lastAnimationFrame = 0\n\n    var resetExpandShrink = function() {\n      var width = element.offsetWidth\n      var height = element.offsetHeight\n\n      expandChild.style.width = width + 10 + 'px'\n      expandChild.style.height = height + 10 + 'px'\n\n      expand.scrollLeft = width + 10\n      expand.scrollTop = height + 10\n\n      shrink.scrollLeft = width + 10\n      shrink.scrollTop = height + 10\n    }\n\n    var reset = function() {\n      // Check if element is hidden\n      if (initialHiddenCheck) {\n        var invisible = element.offsetWidth === 0 && element.offsetHeight === 0\n        if (invisible) {\n          // Check in next frame\n          if (!lastAnimationFrame) {\n            lastAnimationFrame = requestAnimationFrame(function() {\n              lastAnimationFrame = 0\n\n              reset()\n            })\n          }\n\n          return\n        } else {\n          // Stop checking\n          initialHiddenCheck = false\n        }\n      }\n\n      resetExpandShrink()\n    }\n    element.resizeSensor.resetSensor = reset\n\n    var onResized = function() {\n      rafId = 0\n\n      if (!dirty) return\n\n      lastWidth = size.width\n      lastHeight = size.height\n\n      if (element.resizedAttached) {\n        element.resizedAttached.call(size)\n      }\n    }\n\n    var onScroll = function() {\n      size = getElementSize(element)\n      dirty = size.width !== lastWidth || size.height !== lastHeight\n\n      if (dirty && !rafId) {\n        rafId = requestAnimationFrame(onResized)\n      }\n\n      reset()\n    }\n\n    var addEvent = function(el, name, cb) {\n      if (el.attachEvent) {\n        el.attachEvent('on' + name, cb)\n      } else {\n        el.addEventListener(name, cb, { passive: true })\n      }\n    }\n\n    addEvent(expand, 'scroll', onScroll)\n    addEvent(shrink, 'scroll', onScroll)\n\n    // Fix for custom Elements\n    requestAnimationFrame(reset)\n  }\n\n  forEachElement(element, function(elem) {\n    attachResizeEvent(elem, callback)\n  })\n\n  this.detach = function(ev) {\n    ResizeSensor.detach(element, ev)\n  }\n\n  this.reset = function() {\n    element.resizeSensor.resetSensor()\n  }\n}\n\nResizeSensor.reset = function(element) {\n  forEachElement(element, function(elem) {\n    elem.resizeSensor.resetSensor()\n  })\n}\n\nResizeSensor.detach = function(element, ev) {\n  forEachElement(element, function(elem) {\n    if (!elem) return\n    if (elem.resizedAttached && typeof ev === 'function') {\n      elem.resizedAttached.remove(ev)\n      if (elem.resizedAttached.length()) return\n    }\n    if (elem.resizeSensor) {\n      if (elem.contains(elem.resizeSensor)) {\n        elem.removeChild(elem.resizeSensor)\n      }\n      delete elem.resizeSensor\n      delete elem.resizedAttached\n    }\n  })\n}\n\nif (typeof MutationObserver !== 'undefined') {\n  var observer = new MutationObserver(function(mutations) {\n    for (var i in mutations) {\n      if (mutations.hasOwnProperty(i)) {\n        var items = mutations[i].addedNodes\n        for (var j = 0; j < items.length; j++) {\n          if (items[j].resizeSensor) {\n            ResizeSensor.reset(items[j])\n          }\n        }\n      }\n    }\n  })\n\n  document.addEventListener('DOMContentLoaded', function(event) {\n    observer.observe(document.body, {\n      childList: true,\n      subtree: true,\n    })\n  })\n}\n"]},"metadata":{},"sourceType":"module"}