{"version":3,"sources":["../../src/config/build.config.js"],"names":["Path","require","webpack","HtmlWebpackPlugin","InterpolateHtmlPlugin","WatchMissingNodeModulesPlugin","getClientEnvironment","paths","publicPath","publicUrl","env","CaseSensitivePathsPlugin","BabelMinifyPlugin","BundleAnalyzerPlugin","UglifyJSPlugin","IS_PROD","process","NODE_ENV","console","log","MINIFY","IS_DEV","TARGET","filtered","ls","filter","x","watch","argv","indexOf","config","devtool","target","module","exports","Object","assign","entry","app","resolve","appIndexJs","output","path","appBuild","pathinfo","filename","mainFields","extensions","modules","modelsNodeModules","appNodeModules","alias","rules","use","loader","test","exclude","plugins","raw","inject","template","appHtml","DefinePlugin","stringified","HotModuleReplacementPlugin","NamedModulesPlugin","optimize","CommonsChunkPlugin","name","minChunks","context","OccurrenceOrderPlugin","deadcode","mangle","topLevel","DEBUG","node","fs","net","tls"],"mappings":"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","file":"build.config.js","sourcesContent":["//\n\n// WARNING WARNING\n// TURN OFF PRETTIER ON THIS FILE IT DESTROYS THE REGEX\n// WARNING\n\nconst Path = require('path')\n// const Fs = require('fs')\nconst webpack = require('webpack')\nconst HtmlWebpackPlugin = require('html-webpack-plugin')\nconst InterpolateHtmlPlugin = require('react-dev-utils/InterpolateHtmlPlugin')\nconst WatchMissingNodeModulesPlugin = require('react-dev-utils/WatchMissingNodeModulesPlugin')\nconst getClientEnvironment = require('./env')\nconst paths = require('./paths')\nconst publicPath = '/'\nconst publicUrl = ''\nconst env = getClientEnvironment(publicUrl)\nconst CaseSensitivePathsPlugin = require('case-sensitive-paths-webpack-plugin')\nconst BabelMinifyPlugin = require('babel-minify-webpack-plugin')\nconst BundleAnalyzerPlugin = require('webpack-bundle-analyzer')\n  .BundleAnalyzerPlugin\nconst UglifyJSPlugin = require('uglifyjs-webpack-plugin')\n\nconst IS_PROD = process.env.NODE_ENV === 'production'\n\nconsole.log('IS_PROD', IS_PROD)\nconst MINIFY = process.env.MINIFY === 'true'\nconst IS_DEV = !IS_PROD\nconst TARGET = process.env.TARGET\nconst filtered = ls => ls.filter(x => !!x)\nconst watch = process.argv.indexOf('--watch') > 0\n\n// if you want to parse our modules directly use this, but we have dist/ folder now\n// const ORG = Path.resolve(__dirname, '..', '..', 'node_modules', '@mcro')\n// const includes = Fs.readdirSync(ORG).map(folder => Path.resolve(ORG, folder))\n\nconsole.log('running webpack for:', process.env.NODE_ENV, 'watching', watch)\n\nlet config\n\nif (IS_PROD) {\n  config = {\n    devtool: 'source-map',\n    // bail: true,\n  }\n} else {\n  config = {\n    devtool: 'cheap-module-source-map',\n  }\n}\n\nif (TARGET) {\n  config.target = TARGET\n}\n\nmodule.exports = Object.assign(config, {\n  watch,\n\n  entry: {\n    app: filtered([\n      IS_DEV && require.resolve('webpack-dev-server/client') + '?/',\n      IS_DEV && require.resolve('webpack/hot/only-dev-server'),\n      paths.appIndexJs,\n    ]),\n  },\n\n  output: {\n    path: paths.appBuild,\n    pathinfo: true,\n    filename: 'js/[name].js',\n    publicPath: publicPath,\n  },\n\n  resolve: {\n    // avoid module field so we pick up our prod build stuff\n    mainFields: IS_DEV\n      ? ['module', 'browser', 'main', 'es6']\n      : ['browser', 'module:production', 'main', 'es6'],\n    extensions: ['.js', '.json'],\n    // WARNING: messing with this order is dangerous af\n    // TODO: can add root monorepo node_modules and then remove a lot of babel shit\n    modules: [paths.modelsNodeModules, paths.appNodeModules, 'node_modules'],\n    // since were forced into full lodash anyway, lets dedupe\n    alias: {\n      'lodash.merge': 'lodash/merge',\n      'lodash.isequal': 'lodash/isEqualWith',\n      'lodash.bind': 'lodash/bind',\n      'lodash.some': 'lodash/some',\n      'lodash.map': 'lodash/map',\n      'lodash.reduce': 'lodash/reduce',\n      'lodash.reject': 'lodash/reject',\n      'lodash.foreach': 'lodash/forEach',\n      'lodash.filter': 'lodash/filter',\n      'lodash.flatten': 'lodash/flatten',\n      'lodash.pick': 'lodash/pick',\n    },\n  },\n\n  module: {\n    rules: [\n      {\n        use: {\n          loader: 'babel-loader',\n        },\n        test: /\\.js$/,\n        exclude: /node_modules/,\n      },\n    ],\n  },\n\n  plugins: filtered([\n    new InterpolateHtmlPlugin(env.raw),\n    new HtmlWebpackPlugin({\n      inject: true,\n      template: paths.appHtml,\n    }),\n    new webpack.DefinePlugin(env.stringified),\n    new CaseSensitivePathsPlugin(),\n    // hmr\n    IS_DEV && new webpack.HotModuleReplacementPlugin(),\n    IS_DEV && new WatchMissingNodeModulesPlugin(paths.appNodeModules),\n    // readable names\n    new webpack.NamedModulesPlugin(),\n\n    // production\n    IS_PROD &&\n      new webpack.optimize.CommonsChunkPlugin({\n        name: 'common',\n        minChunks(module) {\n          var context = module.context\n          return context && context.indexOf('node_modules') >= 0\n        },\n      }),\n    IS_PROD && new webpack.optimize.OccurrenceOrderPlugin(),\n    // MINIFY && new UglifyJSPlugin(),\n    // slow\n    MINIFY &&\n      new BabelMinifyPlugin({\n        deadcode: true,\n        mangle: { topLevel: true },\n      }),\n\n    // bundle analyzer\n    process.env.DEBUG && new BundleAnalyzerPlugin(),\n  ]),\n  node: TARGET\n    ? false\n    : {\n        fs: 'empty',\n        net: 'empty',\n        tls: 'empty',\n      },\n})\n"]}