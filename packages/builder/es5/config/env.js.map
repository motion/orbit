{"version":3,"sources":["../../src/config/env.js"],"names":["REACT_APP","getClientEnvironment","publicUrl","raw","Object","keys","process","env","filter","test","key","reduce","NODE_ENV","PUBLIC_URL","stringified","JSON","stringify","module","exports"],"mappings":"AAAA;;AAEA;AACA;;AAEA,IAAIA,YAAY,cAAhB;;AAEA,SAASC,oBAAT,CAA8BC,SAA9B,EAAyC;AACvC,MAAIC,MAAMC,OAAOC,IAAP,CAAYC,QAAQC,GAApB,EAAyBC,MAAzB,CAAgC;AAAA,WAAOR,UAAUS,IAAV,CAAeC,GAAf,CAAP;AAAA,GAAhC,EAA4DC,MAA5D,CAAmE,UAC3EJ,GAD2E,EAE3EG,GAF2E,EAGxE;AACHH,QAAIG,GAAJ,IAAWJ,QAAQC,GAAR,CAAYG,GAAZ,CAAX;AACA,WAAOH,GAAP;AACD,GANS,EAMP;AACD;AACA;AACAK,cAAUN,QAAQC,GAAR,CAAYK,QAAZ,IAAwB,aAHjC;AAID;AACA;AACA;AACA;AACAC,gBAAYX;AARX,GANO,CAAV;AAgBA;AACA,MAAIY,cAAc;AAChB,mBAAeV,OAAOC,IAAP,CAAYF,GAAZ,EAAiBQ,MAAjB,CAAwB,UAACJ,GAAD,EAAMG,GAAN,EAAc;AACnDH,UAAIG,GAAJ,IAAWK,KAAKC,SAAL,CAAeb,IAAIO,GAAJ,CAAf,CAAX;AACA,aAAOH,GAAP;AACD,KAHc,EAGZ,EAHY;AADC,GAAlB;;AAOA,SAAO,EAAEJ,QAAF,EAAOW,wBAAP,EAAP;AACD;;AAEDG,OAAOC,OAAP,GAAiBjB,oBAAjB","file":"env.js","sourcesContent":["'use strict'\n\n// Grab NODE_ENV and REACT_APP_* environment variables and prepare them to be\n// injected into the application via DefinePlugin in Webpack configuration.\n\nvar REACT_APP = /^REACT_APP_/i\n\nfunction getClientEnvironment(publicUrl) {\n  var raw = Object.keys(process.env).filter(key => REACT_APP.test(key)).reduce((\n    env,\n    key\n  ) => {\n    env[key] = process.env[key]\n    return env\n  }, {\n    // Useful for determining whether weâ€™re running in production mode.\n    // Most importantly, it switches React into the correct mode.\n    NODE_ENV: process.env.NODE_ENV || 'development',\n    // Useful for resolving the correct path to static assets in `public`.\n    // For example, <img src={process.env.PUBLIC_URL + '/img/logo.png'} />.\n    // This should only be used as an escape hatch. Normally you would put\n    // images into the `src` and `import` them in code to get their paths.\n    PUBLIC_URL: publicUrl,\n  })\n  // Stringify all values so we can feed into Webpack DefinePlugin\n  var stringified = {\n    'process.env': Object.keys(raw).reduce((env, key) => {\n      env[key] = JSON.stringify(raw[key])\n      return env\n    }, {}),\n  }\n\n  return { raw, stringified }\n}\n\nmodule.exports = getClientEnvironment\n"]}