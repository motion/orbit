import { Space, View, ViewProps } from '@o/ui'
import { gloss, useTheme } from 'gloss'
import React, { memo } from 'react'
import { useNavigation } from 'react-navi'

import { useScreenSize } from '../hooks/useScreenSize'
import { useParallax } from '../pages/ParallaxContext'

const words = `<?xml version="1.0" encoding="UTF-8"?>
<svg width="1441px" height="372px" viewBox="0 0 1441 372" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
    <!-- Generator: Sketch 56.3 (81716) - https://sketch.com -->
    <title>logomark-solid</title>
    <desc>Created with Sketch.</desc>
    <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
        <g id="Artboard" transform="translate(-1016.000000, -756.000000)">
            <g id="orbit-logo" transform="translate(1005.000000, 721.000000)">
                <g id="Group-2" transform="translate(215.000000, 135.000000)" fill="#000000">
                    <polygon id="BIT" points="1007.21178 1 830 1 830 58.9835309 887.429745 58.9835309 887.429745 228.591641 949.782039 228.591641 949.782039 58.9835309 1007.21178 58.9835309"></polygon>
                    <polygon id="Path" points="794.352294 1 726 1 726 228.591641 794.352294 228.591641"></polygon>
                    <path d="M635.05272,228.127483 C634.96329,228.418865 634.874102,228.709704 634.785156,229 L507.146256,229 L507.008563,12.2910787 C507.231944,6.42591782 511.799292,1.66188167 517.67624,1 L613.210938,1 C648.460296,1.114212 677,29.7242034 677,65 C677,82.6763443 669.833935,98.6789646 658.248479,110.261188 C676.687521,121.489413 689,141.775796 689,164.936805 C689,196.850526 665.623178,223.306402 635.05272,228.127483 Z M604.904762,140.005986 L604.904762,140 L563,140 L563,177.142857 L604.904762,177.142857 L604.904762,177.136871 C614.941409,176.884265 623,168.668939 623,158.571429 C623,148.473918 614.941409,140.258592 604.904762,140.005986 Z M603.904762,53.0058362 L603.904762,53 L562,53 L562,91.0952381 L603.904762,91.0952381 L603.904762,91.0894019 C613.940338,90.8366777 622,82.4081347 622,72.047619 C622,61.6871034 613.940338,53.2585603 603.904762,53.0058362 Z" id="Path"></path>
                    <path d="M382.911617,1.12345752 C423.661081,3.4102294 456,37.178535 456,78.5 C456,108.661292 440.269797,134.798407 416.001721,147.605926 L477.336555,229 L408.469094,229 L353.60159,156.188363 L326.145138,156.188363 L326.145138,228.979537 L265,228.979537 C265,228.979537 265,58.0737728 265.113846,10.2340253 C265.113846,5.19405194 269.681096,1.10370319 275.344954,1 L382.892896,1 C382.899137,1.04116117 382.905378,1.08231367 382.911617,1.12345752 Z M374,100.994554 C374.166229,100.998178 374.332902,101 374.5,101 C386.926407,101 397,90.9264069 397,78.5 C397,66.0735931 386.926407,56 374.5,56 C374.332902,56 374.166229,56.0018215 374,56.0054458 L374,56 L327,56 L327,101 L374,101 L374,100.994554 Z" id="Shape-Copy-21" fill-rule="nonzero"></path>
                    <path d="M0,115.710937 C0,179.613608 52.2925271,231.421874 116.792507,231.421874 C181.292493,231.421874 233.585014,179.613608 233.585014,115.710937 C233.585014,51.8082665 181.297986,3.55271368e-15 116.792507,3.55271368e-15 C52.2925271,3.55271368e-15 0,51.8082665 0,115.710937 Z M61.4238174,115.085473 C61.4238174,84.7083999 86.4944345,60.0854727 117.423817,60.0854727 C148.353202,60.0854727 173.423817,84.7083999 173.423817,115.085473 C173.423817,145.462545 148.348486,170.085473 117.423817,170.085473 C86.4944345,170.085473 61.4238174,145.462545 61.4238174,115.085473 Z" id="Shape-Copy-22" fill-rule="nonzero"></path>
                </g>
                <g id="Group" transform="translate(0.000000, 55.000000)" fill-rule="nonzero">
                    <path d="M45.276963,50.3222038 C88.1821895,33.1832347 114.830226,29.9597342 159.775447,20.4281759 C198.999259,12.1099601 208.825507,63.9665568 176.951216,87.3639773 C135.331777,117.914853 124.285066,90.6108269 102.801279,172.396674 C92.9432825,209.924725 26.9588078,204.305635 23.3946681,172.111322 C18.6245796,129.023863 19.7277304,136.269926 20.128075,103.530919 C20.4548476,76.8450085 25.7702131,58.1143912 45.276963,50.3222038 Z" id="notch-copy-3" fill="#8C60F9" transform="translate(107.851987, 108.990313) rotate(-14.000000) translate(-107.851987, -108.990313) "></path>
                    <path d="M36.6783271,51.4278971 C79.470112,34.3342438 106.04769,31.1192664 150.874077,21.6129096 C189.99418,13.3166871 200.787043,65.3224973 168.997028,88.6580548 C143.4176,107.434712 89.5362788,128.553376 51.9675828,128.930056 C28.5711181,129.164639 11.4424896,117.026885 11.5949101,104.495929 C11.9218414,77.8805758 17.2231531,59.1994824 36.6783271,51.4278971 Z" id="notch-copy-4" fill="#FF5959" transform="translate(99.606268, 74.829430) rotate(-14.000000) translate(-99.606268, -74.829430) "></path>
                    <path d="M32.971202,48.5373405 C75.8764289,31.3983713 102.524465,28.1748709 147.469686,18.6433126 C186.693498,10.3250968 197.514972,62.4687754 165.640681,85.8661954 C124.021242,116.417071 13.4644522,56.3295278 32.971202,48.5373405 Z" id="notch-copy-5" fill="#F4CA5F" transform="translate(107.497775, 56.108546) rotate(-14.000000) translate(-107.497775, -56.108546) "></path>
                </g>
            </g>
        </g>
    </g>
</svg>`

let logoScales = {
  small: 0.7,
  medium: 0.9,
  large: 0.9,
}

export const LogoVertical = memo(
  ({ size, ...rest }: ViewProps & { size?: 'small' | 'medium' | 'large' }) => {
    const theme = useTheme()
    const screenSize = useScreenSize()
    const parallax = useParallax()
    const nav = useNavigation()
    const scale = logoScales[size || screenSize]

    return (
      <View
        position="relative"
        zIndex={100000}
        cursor="pointer"
        alignItems="center"
        justifyContent="center"
        userSelect="none"
        transform={{ scale }}
        padding={[0, 35]}
        onClick={async e => {
          e.preventDefault()
          if ((await nav.getRoute()).url.pathname === '/') {
            parallax && parallax.scrollTo(0)
          } else {
            nav.navigate('/')
          }
        }}
        {...rest}
      >
        <BrandMark id="orbit-mark" />
        <Space size={12} />
        <BrandWords fill={theme.color} width={1441 * 0.08} height={372 * 0.08} />
      </View>
    )
  },
)

export const BrandMark = memo((props: any) => {
  return (
    <svg className="brand-mark" width="43px" height="53px" viewBox="0 0 43 53" {...props}>
      <g id="Page-1" stroke="none" strokeWidth="1" fill="none" fillRule="evenodd">
        <g id="home" transform="translate(-760.000000, -31.000000)" fillRule="nonzero">
          <g transform="translate(25.000000, -32.000000)" id="orbit-mark">
            <g transform="translate(735.000000, 63.000000)">
              <path
                d="M4.15309578,32.1280955 C4.58662941,32.9167853 5.25340762,33.5368306 6.11507116,33.9685898 C6.25897174,34.0406949 6.40805726,34.107507 6.56224442,34.1691096 C6.56262188,34.1897269 6.56301465,34.2103081 6.56342281,34.2308625 C6.6018013,36.163551 6.6052835,37.8788144 7.3150935,44.3403557 C7.4837425,45.875601 8.3606098,47.1959201 9.837338,48.1948295 C11.293817,49.1800416 13.2432607,49.7787765 15.2857775,49.8704957 C17.3677537,49.9639868 19.3894789,49.5257763 20.9844366,48.6114366 C22.674532,47.6425575 23.8214186,46.1891015 24.2987446,44.2926798 C25.4506197,39.7162661 26.5177732,36.385146 27.6260581,33.929568 L30.8882997,32.939124 C29.4814382,35.2108162 28.144836,38.9201556 26.6314206,44.9329731 C25.9797036,47.5222527 24.3964295,49.528745 22.1450837,50.8193715 C20.1439378,51.9665662 17.6859249,52.4993425 15.1821601,52.3869109 C12.7272055,52.2766712 10.360756,51.5498609 8.5260872,50.3088283 C6.47793142,48.9233858 5.17536477,46.9620815 4.91889824,44.6274156 C4.19958146,38.0793319 4.19258582,36.3253902 4.15203056,34.2830826 C4.14042539,33.6986619 4.14056919,33.1005239 4.15057686,32.3081002 C4.1511622,32.2617516 4.15202146,32.2006474 4.15309578,32.1280955 Z"
                id="Shape"
                fill="#8C60F9"
                transform="translate(17.515746, 39.825101) rotate(-14.000000) translate(-17.515746, -39.825101) "
              />
              <path
                d="M33.4535607,24.4819876 C29.1990074,27.6177854 23.910458,30.470676 18.5902663,32.4746134 C14.3738258,34.0628047 10.5017841,34.9625655 7.5129639,34.9988456 C5.85500625,35.0189709 4.45855567,34.7764 3.35948878,34.2358471 C2.08676505,33.6098847 1.23208552,32.5874876 0.91494795,31.2287149 C0.05748033,27.5549037 -0.21318991,24.6683724 0.17043488,22.2019562 C0.45395957,20.3791076 1.1017636,18.7983856 2.14209722,17.4528123 C2.1613452,17.9545741 2.3753259,18.4728899 2.75989571,18.9464092 C2.97437417,19.2104956 3.25008095,19.4681016 3.58405861,19.720661 C2.13663875,22.1589382 2.11973867,25.5838555 3.30069893,30.6436677 C3.58243816,31.8507765 4.93401533,32.5155213 7.4839159,32.4845691 C10.1532992,32.4521665 13.7676175,31.6122938 17.7441489,30.1144681 C21.1162925,28.844295 24.4777149,27.2155155 27.5376592,25.39916 C28.5180086,25.3469033 29.4701694,25.2551842 30.3855155,25.1223034 C31.4676642,24.9652078 32.4920486,24.7523621 33.4535607,24.4819876 Z"
                id="notch-copy-6"
                fill="#FF5959"
              />
              <path
                d="M16.8065829,7.77535381 C17.9130605,7.18786306 18.9964314,6.57062403 20.3131321,5.92694147 C21.1831708,5.50161419 28.0399493,2.24623787 30.461525,1.04886392 C32.8319111,-0.12319884 35.1639864,-0.304758032 37.2309584,0.463017334 C39.142749,1.17315068 40.7160455,2.6612061 41.7396913,4.64423189 C43.8365843,8.70637189 43.3281026,14.0372071 40.1301325,17.9442443 C38.0298148,20.5102532 34.6501512,22.0483717 30.3302047,22.6769259 C26.6883882,23.2068119 22.4513151,23.0696408 18.185981,22.3772466 C14.3824744,21.759821 10.7880858,20.7278431 8.3606969,19.580448 C7.0799326,18.9750473 6.1454296,18.3515425 5.60621914,17.6861036 C4.76218662,16.6444842 4.75749109,15.3819546 5.85844308,14.5767658 C9.6964626,11.7698042 13.1635754,9.7096298 16.8065829,7.77535381 Z M9.3645065,17.339058 C11.5740757,18.3834927 14.9607125,19.3558234 18.5607983,19.9402275 C22.6058282,20.5968597 26.6091661,20.7264638 29.9934404,20.2340503 C33.780122,19.6830864 36.6310819,18.3855862 38.2920633,16.3563251 C40.8549611,13.2251709 41.2598194,8.9807065 39.6180201,5.80018233 C38.8629741,4.33749339 37.7405341,3.27586701 36.4143852,2.7832699 C34.9756529,2.24885377 33.3100514,2.37852594 31.5030339,3.27202509 C29.0602109,4.47990498 22.2428081,7.74316256 21.3909448,8.15960464 C20.0965247,8.79239508 18.9682913,9.36388773 17.887208,9.9378952 C14.4479709,11.7639782 11.2755803,13.7069193 7.6692195,16.3252638 C8.0069303,16.6160462 8.5883361,16.9721724 9.3645065,17.339058 Z"
                id="notch-copy-7"
                fill="#F5CA5C"
              />
            </g>
          </g>
        </g>
      </g>
    </svg>
  )
})

const wordsLines = `${words}`.split('\n')
wordsLines.splice(15, 4)
const cleanBrand = wordsLines.join('')

export const BrandWords = memo(({ fill, ...props }: any) => {
  const theme = useTheme()
  const f = fill || theme.color
  return <svg cleanup fill={f} {...props} dangerouslySetInnerHTML={{ __html: cleanBrand }} />
})

const Image = gloss(View)

Image.defaultProps = {
  tagName: 'img',
}
