{"version":3,"sources":["../src/windows.js"],"names":["onWindow","Constants","onWindows","cb","push","console","log","APP_URL","AppWindows","ExampleApp","state","restart","show","size","position","appWindows","windows","hide","Promise","setState","resolve","measure","initialSize","ref","windowRef","listenToApps","registerShortcuts","onAppWindow","win","electron","toggleDevTools","showDevTools","updateWindows","on","event","key","findBy","onHasPath","path","sender","send","openApp","removeByKey","toggleBar","service","next","setTimeout","focus","unregisterAll","SHORTCUTS","measureAndShow","Object","keys","shortcut","ret","register","uid","Math","random","forEach","repl","start","prompt","assign","context","Root","error","close","appWindow","frame","defaultSize","vibrancy","transparent","backgroundColor","hasShadow","webPreferences","experimentalFeatures","transparentVisuals","bgPadding","bgWindow","IS_PROD","map","x","val","v","activeWindow","nativeWindowOpen","active","setPosition","setSize","focused","showBar","Component"],"mappings":"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","file":"windows.js","sourcesContent":["import React from 'react'\nimport { app, globalShortcut, ipcMain } from 'electron'\nimport repl from 'repl'\n// import localShortcut from 'electron-localshortcut'\nimport open from 'opn'\nimport Menu from '~/menu'\nimport { measure } from '~/helpers'\nimport * as Constants from '~/constants'\nimport WindowsStore from './windowsStore'\nimport Window from './window'\n\nlet onWindows = []\nexport function onWindow(cb) {\n  onWindows.push(cb)\n}\n\nconsole.log('Constants.APP_URL', Constants.APP_URL)\n\nconst AppWindows = new WindowsStore()\n\nexport default class ExampleApp extends React.Component {\n  state = {\n    restart: false,\n    show: true,\n    size: [0, 0],\n    position: [0, 0],\n    appWindows: AppWindows.windows,\n  }\n\n  componentDidMount() {\n    console.log('did mount windows')\n    this.measureAndShow()\n    this.next() // preload one app window\n    onWindows.forEach(cb => cb(this))\n    setTimeout(this.measureAndShow, 500)\n    this.repl = repl.start({\n      prompt: 'electron > ',\n    })\n    Object.assign(this.repl.context, {\n      Root: this,\n      AppWindows: AppWindows,\n    })\n    console.log('started a repl!')\n  }\n\n  hide = () => new Promise(resolve => this.setState({ show: false }, resolve))\n\n  show = () =>\n    new Promise(resolve =>\n      this.setState(\n        { show: true, position: this.position, size: this.size },\n        resolve\n      )\n    )\n\n  measure = () => {\n    const { position, size } = measure()\n    this.size = size\n    this.position = position\n    this.initialSize = this.initialSize || this.size\n  }\n\n  onWindow = ref => {\n    if (ref) {\n      this.windowRef = ref\n      this.measure()\n      this.show()\n      this.listenToApps()\n      this.registerShortcuts()\n    }\n  }\n\n  onAppWindow = win => electron => {\n    if (win && electron && !win.ref) {\n      win.ref = electron\n\n      // dev-tools helpers, from electron-debug\n      const toggleDevTools = () => {\n        win.showDevTools = !win.showDevTools\n        this.updateWindows()\n      }\n\n      // localShortcut.register(\n      //   Constants.IS_MAC ? 'Cmd+Alt+I' : 'Ctrl+Shift+I',\n      //   toggleDevTools\n      // )\n      // localShortcut.register('F12', toggleDevTools)\n      // localShortcut.register('CmdOrCtrl+R', () => {\n      //   electron.webContents.reloadIgnoringCache()\n      // })\n    }\n  }\n\n  listenToApps = () => {\n    ipcMain.on('where-to', (event, key) => {\n      console.log('where-to from', key)\n      const win = AppWindows.findBy(key)\n      if (win) {\n        win.onHasPath(() => {\n          console.log('where-to:', key, win.path)\n          event.sender.send('app-goto', win.path)\n        })\n      } else {\n        console.log('no window found for where-to event')\n      }\n    })\n\n    ipcMain.on('bar-goto', (event, path) => {\n      this.openApp(path)\n    })\n\n    ipcMain.on('bar-hide', () => {\n      this.hide()\n    })\n\n    ipcMain.on('close', (event, key) => {\n      AppWindows.removeByKey(+key)\n      this.updateWindows()\n    })\n\n    ipcMain.on('app-bar-toggle', (event, key) => {\n      AppWindows.findBy(key).toggleBar()\n      this.updateWindows()\n      event.sender.send('app-bar-toggle', 'success')\n    })\n\n    ipcMain.on('open-settings', (event, service) => {\n      open(`${Constants.APP_URL}/settings?service=` + service)\n    })\n  }\n\n  updateWindows = () => {\n    return new Promise(resolve => {\n      this.setState(\n        {\n          appWindows: AppWindows.windows,\n        },\n        resolve\n      )\n    })\n  }\n\n  next = path => {\n    const next = AppWindows.next(path)\n    this.updateWindows()\n    return next\n  }\n\n  openApp = path => {\n    this.hide()\n    const next = this.next(path)\n    if (next) {\n      setTimeout(() => next.ref && next.ref.focus(), 100)\n    }\n  }\n\n  registerShortcuts = () => {\n    globalShortcut.unregisterAll()\n    const SHORTCUTS = {\n      'Option+Space': () => {\n        console.log('command option+space')\n        if (this.state.show) {\n          this.hide()\n        } else {\n          this.measureAndShow()\n        }\n      },\n    }\n    for (const shortcut of Object.keys(SHORTCUTS)) {\n      const ret = globalShortcut.register(shortcut, SHORTCUTS[shortcut])\n      if (!ret) {\n        console.log('couldnt register shortcut')\n      }\n    }\n  }\n\n  measureAndShow = async () => {\n    this.measure()\n    await this.show()\n    this.windowRef.focus()\n  }\n\n  componentDidCatch(error) {\n    console.error(error)\n    this.setState({ error })\n  }\n\n  uid = Math.random()\n\n  render() {\n    const { appWindows, error, restart } = this.state\n\n    if (restart) {\n      console.log('\\n\\n\\n\\n\\n\\nRESTARTING\\n\\n\\n\\n\\n\\n')\n      this.repl.close()\n      onWindows = []\n      return (\n        <app>\n          <window />\n        </app>\n      )\n    }\n\n    const appWindow = {\n      frame: false,\n      defaultSize: [700, 500],\n      vibrancy: 'dark',\n      transparent: true,\n      backgroundColor: 'transparent',\n      hasShadow: true,\n      webPreferences: {\n        experimentalFeatures: true,\n        transparentVisuals: true,\n      },\n    }\n\n    if (error) {\n      console.log('recover render from error')\n      return null\n    }\n\n    const bgPadding = 30\n    const bgWindow = {\n      ...appWindow,\n      vibrancy: 'dark',\n    }\n\n    return (\n      <app onBeforeQuit={() => console.log('hi')}>\n        <Menu />\n        <window\n          key=\"bar\"\n          {...bgWindow}\n          defaultSize={this.initialSize || this.state.size}\n          size={this.state.size}\n          ref={this.onWindow}\n          showDevTools={true || !Constants.IS_PROD}\n          file={Constants.APP_URL}\n          titleBarStyle=\"customButtonsOnHover\"\n          show={this.state.show}\n          size={this.state.size.map(x => x + bgPadding * 2)}\n          position={this.state.position.map(val => val - bgPadding)}\n          onResize={size =>\n            this.setState({ size: size.map(x => x - bgPadding * 2) })}\n          onMoved={position =>\n            this.setState({ position: position.map(v => v + bgPadding) })}\n          onMove={position => {\n            console.log('called move')\n            this.setState({ position: position.map(v => v + bgPadding) })\n          }}\n          onFocus={() => {\n            this.activeWindow = this.windowRef\n          }}\n          backgroundColor=\"#00000000\"\n          webPreferences={{\n            nativeWindowOpen: true,\n            experimentalFeatures: true,\n            transparentVisuals: true,\n          }}\n        />\n        {appWindows.map(win => {\n          return (\n            <Window\n              key={win.key}\n              file={`${Constants.APP_URL}?key=${win.key}`}\n              show={win.active}\n              {...appWindow}\n              defaultSize={win.size}\n              size={win.size}\n              position={win.position}\n              onMoved={x => {\n                win.setPosition(x)\n                this.updateWindows()\n              }}\n              onResize={x => {\n                win.setSize(x)\n                this.updateWindows()\n              }}\n              onClose={() => {\n                AppWindows.removeByKey(win.key)\n                this.updateWindows()\n              }}\n              onFocus={() => {\n                win.showDevTools = true\n                win.focused = true\n                this.activeWindow = win\n                this.updateWindows()\n              }}\n              onBlur={() => {\n                if (!win) {\n                  console.log('no window weird')\n                  return\n                }\n                win.focused = false\n                if (this.activeWindow.key === win.key) {\n                  this.activeWindow = null\n                }\n                this.updateWindows()\n              }}\n              showDevTools={win.showDevTools}\n              titleBarStyle={\n                win.showBar ? 'hidden-inset' : 'customButtonsOnHover'\n              }\n            />\n          )\n        })}\n      </app>\n    )\n  }\n}\n"]}