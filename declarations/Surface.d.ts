import { CSSPropertySetStrict } from '@mcro/css';
import { Color, ThemeObject, ThemeSelect } from '@mcro/gloss';
import * as React from 'react';
import { PopoverProps } from './Popover';
export declare type SurfaceProps = React.HTMLAttributes<any> & CSSPropertySetStrict & {
    hover?: boolean;
    hoverStyle?: any;
    active?: boolean;
    activeStyle?: any;
    ellipse?: boolean;
    borderRadius?: number;
    after?: React.ReactNode;
    background?: Color;
    badge?: React.ReactNode;
    badgeProps?: Object;
    children?: React.ReactNode;
    name?: string;
    chromeless?: boolean;
    circular?: boolean;
    className?: string;
    clickable?: boolean;
    dim?: boolean;
    elementProps?: Object;
    elevation?: number;
    forwardRef?: React.Ref<any>;
    glint?: boolean;
    glow?: boolean;
    glowProps?: Object;
    height?: number;
    highlight?: boolean;
    hovered?: boolean;
    icon?: React.ReactNode;
    iconAfter?: boolean;
    iconColor?: Color;
    iconProps?: Object;
    iconSize?: number;
    inline?: boolean;
    noInnerElement?: boolean;
    onClick?: any;
    size?: number;
    sizeIcon?: number;
    spaced?: boolean;
    stretch?: boolean;
    tagName?: string;
    theme?: ThemeObject;
    tooltip?: string;
    tooltipProps?: PopoverProps;
    width?: number | string;
    alpha?: number;
    alphaHover?: number;
    dimmed?: boolean;
    disabled?: boolean;
    placeholderColor?: Color;
    highlightBackground?: Color;
    highlightColor?: Color;
    style?: Object;
    ignoreSegment?: boolean;
    sizeLineHeight?: boolean | number;
    type?: string;
    themeSelect?: ThemeSelect;
    iconPad?: number;
};
export declare const Surface: React.NamedExoticComponent<SurfaceProps>;
export declare function getSurfaceShadow(elevation: number): any[];
//# sourceMappingURL=Surface.d.ts.map