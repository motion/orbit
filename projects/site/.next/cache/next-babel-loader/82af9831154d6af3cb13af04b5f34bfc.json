{"ast":null,"code":"(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport { Button, Card, GridItem, GridLayout, Row, useBoundedNumberState, useFetch } from '@o/ui';\nimport React from 'react';\nexport var Basic = () => {\n  var items = useFetch('https://jsonplaceholder.typicode.com/photos');\n  var [num, setNum] = useBoundedNumberState(2, 1, 5);\n  return React.createElement(React.Fragment, null, React.createElement(Row, {\n    group: true\n  }, React.createElement(Button, {\n    flex: 1,\n    onClick: () => setNum(num - 1)\n  }, \"Less\"), React.createElement(Button, {\n    flex: 1,\n    onClick: () => setNum(num + 1)\n  }, \"More\")), React.createElement(GridLayout, {\n    height: 600,\n    key: num\n  }, items.slice(0, num).map((item, index) => React.createElement(GridItem, {\n    key: item.id,\n    id: item.id,\n    w: index === 0 ? 4 : 2,\n    h: index === 0 ? 4 : 2\n  }, React.createElement(Card, {\n    flex: 1,\n    overflow: \"hidden\",\n    title: item.title,\n    elevation: 5\n  }, React.createElement(\"img\", {\n    src: item.url\n  }))))));\n};\n\n__signature__(Basic, \"useFetch{items}\\nuseBoundedNumberState{[num, setNum]}\", () => [useFetch, useBoundedNumberState]);\n\nBasic.displayName = \"Basic\";\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Basic, \"Basic\", \"/Users/nw/projects/motion/orbit/projects/site/pages/DocsPage/DocsGridLayout.tsx\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/Users/nw/projects/motion/orbit/projects/site/pages/DocsPage/DocsGridLayout.tsx"],"names":["Button","Card","GridItem","GridLayout","Row","useBoundedNumberState","useFetch","React","Basic","items","num","setNum","slice","map","item","index","id","title","url"],"mappings":";;;;;;;;;AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,QAAvB,EAAiCC,UAAjC,EAA6CC,GAA7C,EAAkDC,qBAAlD,EAAyEC,QAAzE,QAAyF,OAAzF;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAIC,KAAK,GAAG,MAAM;AACvB,MAAMC,KAAK,GAAGH,QAAQ,CAAC,6CAAD,CAAtB;AACA,MAAM,CAACI,GAAD,EAAMC,MAAN,IAAgBN,qBAAqB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAA3C;AACA,SACE,0CACE,oBAAC,GAAD;AAAK,IAAA,KAAK;AAAV,KACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,CAAd;AAAiB,IAAA,OAAO,EAAE,MAAMM,MAAM,CAACD,GAAG,GAAG,CAAP;AAAtC,YADF,EAIE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,CAAd;AAAiB,IAAA,OAAO,EAAE,MAAMC,MAAM,CAACD,GAAG,GAAG,CAAP;AAAtC,YAJF,CADF,EASE,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAE,GAApB;AAAyB,IAAA,GAAG,EAAEA;AAA9B,KACGD,KAAK,CAACG,KAAN,CAAY,CAAZ,EAAeF,GAAf,EAAoBG,GAApB,CAAwB,CAACC,IAAD,EAAOC,KAAP,KACvB,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAED,IAAI,CAACE,EAApB;AAAwB,IAAA,EAAE,EAAEF,IAAI,CAACE,EAAjC;AAAqC,IAAA,CAAC,EAAED,KAAK,KAAK,CAAV,GAAc,CAAd,GAAkB,CAA1D;AAA6D,IAAA,CAAC,EAAEA,KAAK,KAAK,CAAV,GAAc,CAAd,GAAkB;AAAlF,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE,CAAZ;AAAe,IAAA,QAAQ,EAAC,QAAxB;AAAiC,IAAA,KAAK,EAAED,IAAI,CAACG,KAA7C;AAAoD,IAAA,SAAS,EAAE;AAA/D,KACE;AAAK,IAAA,GAAG,EAAEH,IAAI,CAACI;AAAf,IADF,CADF,CADD,CADH,CATF,CADF;AAqBD,CAxBM;;cAAIV,K,kEACKF,Q,EACQD,qB;;AAFbG,K;;;;;;;;;;0BAAAA,K","sourcesContent":["import { Button, Card, GridItem, GridLayout, Row, useBoundedNumberState, useFetch } from '@o/ui'\nimport React from 'react'\n\nexport let Basic = () => {\n  const items = useFetch('https://jsonplaceholder.typicode.com/photos')\n  const [num, setNum] = useBoundedNumberState(2, 1, 5)\n  return (\n    <>\n      <Row group>\n        <Button flex={1} onClick={() => setNum(num - 1)}>\n          Less\n        </Button>\n        <Button flex={1} onClick={() => setNum(num + 1)}>\n          More\n        </Button>\n      </Row>\n      <GridLayout height={600} key={num}>\n        {items.slice(0, num).map((item, index) => (\n          <GridItem key={item.id} id={item.id} w={index === 0 ? 4 : 2} h={index === 0 ? 4 : 2}>\n            <Card flex={1} overflow=\"hidden\" title={item.title} elevation={5}>\n              <img src={item.url} />\n            </Card>\n          </GridItem>\n        ))}\n      </GridLayout>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}