apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: api
    name: api
  spec:
    ports:
    - name: "3000"
      port: 3000
      targetPort: 3000
    selector:
      io.kompose.service: api
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: couchdb
    name: couchdb
  spec:
    ports:
    - name: "5984"
      port: 5984
      targetPort: 5984
    selector:
      io.kompose.service: couchdb
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: public
    name: public
  spec:
    ports:
    - name: "80"
      port: 80
      targetPort: 80
    selector:
      io.kompose.service: public
  status:
    loadBalancer: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    creationTimestamp: null
    name: api
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: api
      spec:
        containers:
        - env:
          - name: PORT
            value: "3000"
          - name: DB_HOST
            value: couchdb
          - name: DB_PORT
            value: "5984"
          - name: DB_PROTOCOL
            value: http://
          - name: DB_USER
          - name: DB_PASSWORD
          name: api
          ports:
          - containerPort: 3000
          resources: {}
          volumeMounts:
          - mountPath: /repo/apps/api
            name: api-claim0
          - mountPath: /repo/apps/web
            name: api-claim1
        restartPolicy: Always
        volumes:
        - name: api-claim0
          persistentVolumeClaim:
            claimName: api-claim0
        - name: api-claim1
          persistentVolumeClaim:
            claimName: api-claim1
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: api-claim0
    name: api-claim0
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: api-claim1
    name: api-claim1
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    creationTimestamp: null
    name: couchdb
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: couchdb
      spec:
        containers:
        - image: klaemo/couchdb:latest
          name: couchdb
          ports:
          - containerPort: 5984
          resources: {}
          volumeMounts:
          - mountPath: /usr/local/var/lib/couchdb
            name: couchdb-claim0
          - mountPath: /usr/local/etc/couchdb
            name: couchdb-claim1
        restartPolicy: Always
        volumes:
        - name: couchdb-claim0
          persistentVolumeClaim:
            claimName: couchdb-claim0
        - name: couchdb-claim1
          persistentVolumeClaim:
            claimName: couchdb-claim1
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: couchdb-claim0
    name: couchdb-claim0
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: couchdb-claim1
    name: couchdb-claim1
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    creationTimestamp: null
    name: public
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: public
      spec:
        containers:
        - name: public
          ports:
          - containerPort: 80
          resources: {}
          volumeMounts:
          - mountPath: /repo/apps/web
            name: public-claim0
          - mountPath: /repo/apps/public
            name: public-claim1
        restartPolicy: Always
        volumes:
        - name: public-claim0
          persistentVolumeClaim:
            claimName: public-claim0
        - name: public-claim1
          persistentVolumeClaim:
            claimName: public-claim1
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: public-claim0
    name: public-claim0
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: public-claim1
    name: public-claim1
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
kind: List
metadata: {}

