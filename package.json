{
  "name": "orbit-monorepo",
  "private": true,
  "workspaces": [
    "app/*",
    "packages/*",
    "apps/*",
    "projects/*",
    "services/*",
    "example-workspace",
    "example-workspace/apps/*"
  ],
  "scripts": {
    "preinstall": "yarn electron:unpatch",
    "postinstall": "patch-package && yarn electron:patch:if-exists",
    "bootstrap": "./bin/bootstrap",
    "clean": "bin/clean",
    "clean:all": "bin/clean --modules --data --build --apps",
    "clean:workspace": "bin/clean --data --apps",
    "clean:repo": "bin/clean --apps --build --modules",
    "clean:apps": "bin/clean --apps",
    "clean:build": "bin/clean --build",
    "clean:modules": "bin/clean --modules",
    "clean:data": "bin/clean --data",
    "clean:devtools-extensions": "rm -r ~/Library/Application Support/Electron/extensions/*",
    "start": "yarn fix-permissions && cd example-workspace && orbit ws --logLevel 1",
    "start:dev": "yarn fix-permissions && cd example-workspace && orbit ws --dev --logLevel 4",
    "start:dev:clean": "cd example-workspace && orbit ws --dev --logLevel 2 --clean",
    "start:dev:verbose": "cd example-workspace && orbit ws --dev --logLevel 6",
    "start:dev:noworkers": "(cd example-workspace && DISABLE_WORKERS=true orbit ws --dev --logLevel 4)",
    "start:dev:noworkers:debug": "(cd example-workspace && DISABLE_WORKERS=true orbit ws --dev --logLevel 8)",
    "start:dev:ocr": "(cd example-workspace && ENABLE_OCR=true DISABLE_WORKERS=true orbit ws --dev --logLevel 4)",
    "start:dev:noworkers:clean": "(cd example-workspace && DISABLE_WORKERS=true orbit ws --dev --logLevel 6 --clean)",
    "start:devtools": "overmind-devtools & (cd app/orbit-repl && yarn start)",
    "start:site": "cd projects/site && yarn start",
    "electron:patch:if-exists": "if [ -d  ~/github/electron/electron-gn/src/out/Release ]; then yarn electron:patch; fi",
    "electron:patch": "cd node_modules/electron && mv dist dist2 && ln -s ~/github/electron/electron-gn/src/out/Release dist",
    "electron:unpatch": "if [ -f  node_modules/electron/dist2 ]; then rm node_modules/electron/dist && mv node_modules/electron/dist2 node_modules/electron/dist; fi",
    "start:playground": "cd projects/playground && yarn start",
    "fix-permissions": "chmod ug+x app/orbit/_/index.js",
    "build": "tsc -b",
    "build:watch": "tsc -b -w --preserveWatchOutput",
    "build:example-workspace": "(cd example-workspace && orbit ws --build --logLevel 1)",
    "build:app": "cd app/build-orbit && yarn run build:app",
    "build:app:resume": "cd app/build-orbit && yarn run build:app:resume",
    "build:apps": "lerna exec --concurrency 1 --scope '@o/*-app' --no-bail -- orbit build --force --logLevel 1 || true",
    "build:apps:fast": "(cd example-workspace && orbit ws --logLevel 1) & sleep 8 && yarn build:apps && kill $!",
    "deploy:site": "cd projects/site && yarn deploy",
    "publish:app": "cd app/build-orbit && yarn run publish",
    "publish:packages": "lerna publish",
    "publish:apps": "lerna exec --concurrency 1 --scope '@o/*-app' --no-bail -- orbit publish --ignore-version",
    "publish:apps:patch": "lerna exec --concurrency 1 --scope '@o/*-app' --no-bail -- orbit publish --bump-version patch",
    "publish:apps:patch:ignore-build": "lerna exec --scope '@o/*-app' --no-bail -- orbit publish --bump-version patch --ignore-version --ignore-build",
    "test:built:app": "cd app/build-orbit && yarn run test:built:app",
    "dev:open:datafolder": "open ~/Library/Application\\ Support/Electron",
    "dev:open:db": "open ~/Library/Application\\ Support/Electron/development_database.sqlite",
    "test": "jest",
    "oracle:edit": "cd app/oracle && yarn edit"
  },
  "dependencies": {
    "global": "^4.3.2",
    "react-hot-loader": "4.12.12"
  },
  "resolutions": {
    "react": "16.9.0",
    "react-dom": "16.9.0",
    "node-gyp": "5.0.3",
    "node-abi": "2.11.0",
    "@types/lodash": "4.14.135",
    "@types/event-kit": "2.4.0",
    "@types/reconnectingwebsocket": "1.0.1",
    "@types/ws": "5.1.2",
    "@types/zen-observable": "0.8.0",
    "@types/node": "10.5.1",
    "@types/jest": "24.0.11",
    "@types/fs-extra": "5.1.0",
    "@types/react": "16.9.2",
    "@types/react-dom": "16.9.0",
    "lodash": "4.17.11",
    "date-fns": "2.0.0-alpha.7",
    "graphql": "14.4.2",
    "typeorm": "0.3.0-alpha.23",
    "ws": "7.0.1",
    "babel-loader": "8.0.6",
    "babel-polyfill": "7.0.0-beta.3",
    "@babel/core": "7.4.5",
    "@babel/runtime": "7.4.5",
    "@babel/cli": "7.4.4",
    "@babel/preset-env": "7.5.5",
    "@babel/code-frame": "7.0.0",
    "@babel/traverse": "7.4.5",
    "@babel/generator": "7.4.4",
    "@babel/parser": "7.4.5",
    "@babel/types": "7.4.4",
    "@babel/preset-react": "7.0.0",
    "@babel/preset-typescript": "7.3.3"
  },
  "devDependencies": {
    "@babel/cli": "^7.4.4",
    "@babel/core": "^7.4.5",
    "@babel/runtime": "^7.4.5",
    "@types/bonjour": "3.5.5",
    "@types/event-kit": "2.4.0",
    "@types/fs-extra": "5.1.0",
    "@types/jest": "24.0.11",
    "@types/lodash": "4.14.135",
    "@types/node": "10.5.1",
    "@types/react": "16.9.2",
    "@types/react-dom": "16.9.0",
    "@types/reconnectingwebsocket": "1.0.1",
    "@types/webpack": "4.39.1",
    "@types/webpack-env": "1.14.0",
    "@types/ws": "5.1.2",
    "@types/zen-observable": "0.8.0",
    "@typescript-eslint/eslint-plugin": "1.5.0",
    "@typescript-eslint/parser": "1.5.0",
    "babel-eslint": "^8.2.3",
    "confusing-browser-globals": "1.0.7",
    "electron": "7.0.0-beta.3",
    "eslint": "5.16.0",
    "eslint-config-prettier": "4.1.0",
    "eslint-plugin-babel": "5.3.0",
    "eslint-plugin-import": "2.16.0",
    "eslint-plugin-jest": "22.4.1",
    "eslint-plugin-prettier": "3.0.1",
    "eslint-plugin-react": "7.12.4",
    "jest": "24.8.0",
    "lerna": "^3.16.4",
    "mobx": "^5.13.0",
    "overmind-devtools": "20.1.2",
    "patch-package": "6.1.2",
    "prettier": "1.17.0",
    "sb-promisify": "^2.0.2",
    "ts-jest": "24.0.0",
    "typescript": "3.5.3",
    "webpack-cli": "^3.3.7"
  }
}
